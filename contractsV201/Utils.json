{
  "contractName": "Utils",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updatedBalance",
          "type": "uint256"
        }
      ],
      "name": "BalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        }
      ],
      "name": "CampaignerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        }
      ],
      "name": "CampaignerDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "CreatedToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "updatedBalance",
          "type": "uint64"
        }
      ],
      "name": "FungibleTokenBalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "amount",
          "type": "uint64"
        }
      ],
      "name": "FungibleTokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "interactor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InteractorPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InteractorPaidDeferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAdddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "campaignType",
          "type": "uint32"
        }
      ],
      "name": "NewCampaignIsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "responseCode",
          "type": "int256"
        }
      ],
      "name": "ResponseCode",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "campaignType",
          "type": "uint32"
        }
      ],
      "name": "campaignClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "campaignType",
          "type": "uint32"
        }
      ],
      "name": "campaignExpired",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FUNGIBLE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HBAR",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NFT",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "campaignBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "campaignRandomNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nftCampaigner",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewardTokenBalances",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenCampaignBalances",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "tokenType",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "name": "associateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenType",
          "type": "uint32"
        }
      ],
      "name": "getAllWhitelistedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "tokenType",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "isTokenWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCampaigner",
          "type": "address"
        }
      ],
      "name": "addCampaigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenId",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "tokenType",
          "type": "uint32"
        }
      ],
      "name": "getFungibleTokenBalance",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "res",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenId",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "tokenType",
          "type": "uint32"
        }
      ],
      "name": "getNFTTokenBalance",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "res",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        }
      ],
      "name": "getCampaignBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"}],\"name\":\"CampaignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"}],\"name\":\"CampaignerDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"CreatedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"updatedBalance\",\"type\":\"uint64\"}],\"name\":\"FungibleTokenBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"}],\"name\":\"FungibleTokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"interactor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InteractorPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InteractorPaidDeferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAdddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"campaignType\",\"type\":\"uint32\"}],\"name\":\"NewCampaignIsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"responseCode\",\"type\":\"int256\"}],\"name\":\"ResponseCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"campaignType\",\"type\":\"uint32\"}],\"name\":\"campaignClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"campaignType\",\"type\":\"uint32\"}],\"name\":\"campaignExpired\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FUNGIBLE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HBAR\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCampaigner\",\"type\":\"address\"}],\"name\":\"addCampaigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"tokenType\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"associateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"campaignBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"campaignRandomNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenType\",\"type\":\"uint32\"}],\"name\":\"getAllWhitelistedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"}],\"name\":\"getCampaignBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"tokenType\",\"type\":\"uint32\"}],\"name\":\"getFungibleTokenBalance\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"res\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"tokenType\",\"type\":\"uint32\"}],\"name\":\"getNFTTokenBalance\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"res\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"isTokenWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nftCampaigner\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardTokenBalances\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenCampaignBalances\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addCampaigner(address)\":{\"details\":\"Whitelist cmapigner to the user.\",\"params\":{\"newCampaigner\":\"Address of the user having campaigner role to be used here\"}},\"associateToken(address,uint32,bool)\":{\"details\":\"Adds or removes a token from the whitelist.\",\"params\":{\"isWhitelisted\":\"Boolean flag to mark the token as whitelisted or not.\",\"tokenAddress\":\"The address of the token.\",\"tokenType\":\"The type of the token (1 for FUNGIBLE, 2 for NFT).\"}},\"getAllWhitelistedTokens(uint32)\":{\"details\":\"Retrieves all whitelisted addresses for a given token type.\",\"params\":{\"tokenType\":\"The type of the token (1 for FUNGIBLE, 2 for NFT).\"},\"returns\":{\"_0\":\"An array of addresses that are whitelisted for the given token type.\"}},\"getCampaignBalance(string)\":{\"details\":\"Balance holded by the user to see.\",\"params\":{\"campaignAddress\":\"Solidity address of the campaigner.\"}},\"getFungibleTokenBalance(address,address,uint32)\":{\"params\":{\"campaigner\":\"Address of the campaigner'solidity address\",\"tokenId\":\"Solidity address used for the account\",\"tokenType\":\"The type of the token (FUNGIBLE or NFT) [uint32] (1 for FUNGIBLE & 2 for NFT)\"}},\"getNFTTokenBalance(address,address,uint32)\":{\"details\":\"Balance holded by the user to see.\",\"params\":{\"campaigner\":\"Solidity address of the campaigner.\",\"tokenId\":\"Solidity address of the token.\",\"tokenType\":\"The type of the token (FUNGIBLE or NFT) [uint32] (1 for FUNGIBLE & 2 for NFT)                  1 for FUNGIBLE and 2 for NFT.\"}},\"isTokenWhitelisted(uint32,address)\":{\"details\":\"Checks if a specific token address is whitelisted for a given token type.\",\"params\":{\"tokenAddress\":\"The address of the token to check.\",\"tokenType\":\"The type of the token (1 for FUNGIBLE, 2 for NFT).\"},\"returns\":{\"_0\":\"Boolean flag indicating if the token is whitelisted.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HashbuzzModules/Utils.sol\":\"Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/HashbuzzModules/HashbuzzStates.sol\":{\"keccak256\":\"0x3cf0b0db26fe4a55f82c621cc29f4958b10b1a79cfc53ed4f8876d74f9cd89ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa01cf75f74a7eef59e6a7f22fb41c9ed86c96f061c5b5289dbdc1d4352d4210\",\"dweb:/ipfs/QmTJe8Tu2VxEKs1RTHom4DWziRhP86HJgdZoiUFP8n7mge\"]},\"project:/contracts/HashbuzzModules/Utils.sol\":{\"keccak256\":\"0x41dc02d0019ca69a99ceaf6e0ba9133f3a3bceb89953d058186579742c09c98b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d2755cb035356154483d65fc76486cd9a065cc5f264b8919175239c7942ca95a\",\"dweb:/ipfs/QmS5BqCoAPev5nqwgekmuFR8X6EC5prxWiz4J5fru751td\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9531:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "199:666:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "248:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "260:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "250:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "250:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "250:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "227:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "235:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "223:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "223:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "242:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "219:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "219:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "212:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "212:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "209:55:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "273:30:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "296:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "283:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "283:20:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "277:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "312:28:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "322:18:11",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "316:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "363:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "365:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "365:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "365:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "355:2:11"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "359:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "352:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:10:11"
                  },
                  "nodeType": "YulIf",
                  "src": "349:36:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "394:17:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "408:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "404:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "404:7:11"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "398:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "420:23:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "434:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:9:11"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "424:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "452:71:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "474:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "498:2:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "502:4:11",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "494:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "494:13:11"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "509:2:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "490:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "490:22:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "514:2:11",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "486:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "486:31:11"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "519:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "482:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "482:40:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "470:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:53:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "456:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "582:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "584:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "584:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "584:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "541:10:11"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "553:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "538:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "538:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "561:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "573:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "558:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "558:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "535:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "535:46:11"
                  },
                  "nodeType": "YulIf",
                  "src": "532:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "620:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "624:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:22:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "651:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "659:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "644:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:18:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "644:18:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "710:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "719:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "722:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "712:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "712:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "712:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "685:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "693:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "681:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "681:15:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "698:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "677:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "677:26:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "705:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "674:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "671:55:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "752:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "760:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "748:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "748:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "771:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "779:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "767:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "767:17:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "786:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "735:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "735:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "813:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "821:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "809:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "809:15:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "826:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "805:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:26:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "833:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "798:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "798:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "798:37:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "844:15:11",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "853:6:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "844:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "173:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "181:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "189:5:11",
                "type": ""
              }
            ],
            "src": "146:719:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "919:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "929:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "951:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "938:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "938:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "929:5:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1021:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1030:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1023:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1023:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1023:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "980:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "991:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1006:3:11",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1011:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1002:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1002:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1015:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "998:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "998:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "987:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "987:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "977:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "977:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "970:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "967:70:11"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "898:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "909:5:11",
                "type": ""
              }
            ],
            "src": "870:173:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1162:350:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1208:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1217:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1220:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1210:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1210:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1210:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1183:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1192:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1179:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1175:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1175:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1172:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1233:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1260:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1247:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1247:23:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1237:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1313:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1322:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1325:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1315:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1315:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1315:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1285:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1293:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1282:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1282:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1279:50:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1338:60:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1370:9:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1381:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1366:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1366:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1390:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1348:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1348:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1338:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1407:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1440:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1451:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1436:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1436:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1417:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1417:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1407:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1464:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1491:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1502:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1487:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1474:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1474:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1464:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1112:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1123:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1135:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1143:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1151:6:11",
                "type": ""
              }
            ],
            "src": "1048:464:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1616:101:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1626:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1638:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1649:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1634:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1634:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1626:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1668:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1683:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1691:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1679:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:31:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1661:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1661:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1661:50:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1585:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1596:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1607:4:11",
                "type": ""
              }
            ],
            "src": "1517:200:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1770:115:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1780:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1802:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1789:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1789:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1780:5:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1863:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1872:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1875:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1865:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1865:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1865:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1831:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1842:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1849:10:11",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1838:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1838:22:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1828:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1828:33:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1821:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1821:41:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1818:61:11"
                }
              ]
            },
            "name": "abi_decode_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1749:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1760:5:11",
                "type": ""
              }
            ],
            "src": "1722:163:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1993:229:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2039:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2048:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2051:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2041:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2041:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2041:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2014:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2023:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2010:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2010:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2035:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2006:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2006:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2003:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2064:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2093:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2074:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2074:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2064:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2112:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2145:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2156:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2141:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2141:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2122:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2122:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2112:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2169:47:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2201:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2212:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2197:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2197:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "2179:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2179:37:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2169:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1943:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1954:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1966:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1974:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1982:6:11",
                "type": ""
              }
            ],
            "src": "1890:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2297:116:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2343:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2352:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2355:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2345:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2345:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2345:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2318:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2327:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2314:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2314:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2339:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2310:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2307:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2368:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2397:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2378:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2378:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2368:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2263:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2274:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2286:6:11",
                "type": ""
              }
            ],
            "src": "2227:186:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2519:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2529:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2541:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2552:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2537:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2537:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2529:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2571:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2582:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2564:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2564:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2564:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2488:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2499:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2510:4:11",
                "type": ""
              }
            ],
            "src": "2418:177:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2704:224:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2750:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2759:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2762:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2752:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2752:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2752:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2725:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2734:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2721:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2721:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2746:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2717:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2717:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2714:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2775:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2804:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2785:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2785:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2775:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2823:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2856:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2867:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2852:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2852:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2833:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2833:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2823:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2880:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2907:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2918:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2903:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2903:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2890:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2890:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2880:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2654:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2665:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2677:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2685:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2693:6:11",
                "type": ""
              }
            ],
            "src": "2600:328:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3019:172:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3065:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3074:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3077:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3067:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3067:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3067:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3040:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3049:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3036:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3036:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3061:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3032:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3032:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3029:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3090:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3118:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "3100:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3100:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3090:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3137:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3170:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3181:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3166:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3166:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3147:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3147:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3137:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2977:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2988:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3000:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3008:6:11",
                "type": ""
              }
            ],
            "src": "2933:258:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3291:92:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3301:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3313:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3324:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3309:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3309:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3301:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3343:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3368:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3361:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3361:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3354:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3354:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3336:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3336:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3336:41:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3260:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3271:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3282:4:11",
                "type": ""
              }
            ],
            "src": "3196:187:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3487:93:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3497:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3509:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3520:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3505:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3505:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3497:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3539:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3554:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3562:10:11",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3550:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3550:23:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3532:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3532:42:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3532:42:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3456:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3467:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3478:4:11",
                "type": ""
              }
            ],
            "src": "3388:192:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3665:242:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3711:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3720:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3723:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3713:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3713:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3713:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3686:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3695:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3682:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3682:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3707:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3678:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3678:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3675:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3736:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3763:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3750:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3750:23:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3740:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3816:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3825:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3828:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3818:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3818:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3818:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3788:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3796:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3785:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3785:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3782:50:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3841:60:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3873:9:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3884:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3869:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3869:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3893:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3851:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3851:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3841:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3631:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3642:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3654:6:11",
                "type": ""
              }
            ],
            "src": "3585:322:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4012:319:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4058:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4067:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4070:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4060:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4060:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4060:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4033:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4042:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4029:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4029:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4054:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4025:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4025:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4022:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4083:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4112:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4093:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4093:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4083:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4131:47:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4163:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4174:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4159:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4159:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "4141:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4141:37:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4131:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4187:45:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4217:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4228:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4213:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4213:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4200:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4200:32:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4191:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4285:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4294:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4297:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4287:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4287:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4287:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4254:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4275:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4268:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4268:13:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4261:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4261:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4251:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4251:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4244:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4244:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4241:60:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4310:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4320:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4310:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint32t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3962:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3973:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3985:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3993:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4001:6:11",
                "type": ""
              }
            ],
            "src": "3912:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4405:115:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4451:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4460:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4463:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4453:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4453:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4453:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4426:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4435:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4422:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4422:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4447:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4418:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4415:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4476:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4504:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "4486:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4486:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4476:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4371:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4382:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4394:6:11",
                "type": ""
              }
            ],
            "src": "4336:184:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4676:507:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4686:12:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4696:2:11",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4690:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4707:32:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4725:9:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4736:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4721:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4721:18:11"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4711:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4755:9:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4766:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4748:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4748:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4748:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4778:17:11",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4789:6:11"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4782:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4804:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4824:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4818:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4818:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4808:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4847:6:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4855:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4840:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4840:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4840:22:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4871:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4882:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4893:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4878:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4878:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4871:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4905:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4923:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4931:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4919:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4919:15:11"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4909:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4943:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4952:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4947:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5011:146:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5032:3:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5047:6:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "5041:5:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5041:13:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5064:3:11",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5069:1:11",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "5060:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5060:11:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5073:1:11",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "5056:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5056:19:11"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5037:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5037:39:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5025:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5025:52:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5025:52:11"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5090:19:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5101:3:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5106:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5097:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5097:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5090:3:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5122:25:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5136:6:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5144:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5132:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5132:15:11"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5122:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4973:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4976:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4970:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4970:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4984:18:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4986:14:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4995:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4998:1:11",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4991:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4991:9:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4986:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4966:3:11",
                    "statements": []
                  },
                  "src": "4962:195:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5166:11:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5174:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5166:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4645:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4656:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4667:4:11",
                "type": ""
              }
            ],
            "src": "4525:658:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5362:295:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5379:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5390:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5372:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5372:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5413:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5424:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5409:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5409:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5429:2:11",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5402:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5402:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5402:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5452:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5463:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5448:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5448:18:11"
                      },
                      {
                        "hexValue": "556e617574686f72697a6520416363657373207265717565737465642c204361",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5468:34:11",
                        "type": "",
                        "value": "Unauthorize Access requested, Ca"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5441:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5441:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5441:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5523:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5534:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5519:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5519:18:11"
                      },
                      {
                        "hexValue": "6c6c6572206d757374206265206f776e6572206f722063616d706169676e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5539:34:11",
                        "type": "",
                        "value": "ller must be owner or campaigner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5512:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5512:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5512:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5594:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5605:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5590:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5590:19:11"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5611:3:11",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5583:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5583:32:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5583:32:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5624:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5636:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5647:3:11",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5632:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5632:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5624:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a9ede49fb55d81af1d9b7332b3409302c802114c8af7894dc963b0defb92f3d9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5339:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5353:4:11",
                "type": ""
              }
            ],
            "src": "5188:469:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5836:166:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5853:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5864:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5846:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5846:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5846:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5887:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5898:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5883:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5883:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5903:2:11",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5876:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5876:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5876:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5926:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5937:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5922:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5922:18:11"
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f74204e4654",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5942:18:11",
                        "type": "",
                        "value": "Token is not NFT"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5915:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5915:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5915:46:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5970:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5982:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5993:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5978:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5978:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5970:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9704c2377bf36aa93a884dd9d2b88abfffbf40017d6552b0f93a386cf0aeb82e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5813:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5827:4:11",
                "type": ""
              }
            ],
            "src": "5662:340:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6146:275:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6156:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6176:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6170:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6170:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6160:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6192:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6201:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6196:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6263:77:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6288:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6293:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6284:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6284:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6311:6:11"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6319:1:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6307:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6307:14:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6323:4:11",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6303:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6303:25:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6297:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6297:32:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6277:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6277:53:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6277:53:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6222:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6225:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6219:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6219:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6233:21:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6235:17:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6244:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6247:4:11",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6240:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6240:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6235:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6215:3:11",
                    "statements": []
                  },
                  "src": "6211:129:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6349:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6363:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6368:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6359:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6359:16:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6353:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6391:2:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6395:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6384:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6384:13:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6384:13:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6406:9:11",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "6413:2:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6406:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6122:3:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6127:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6138:3:11",
                "type": ""
              }
            ],
            "src": "6007:414:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6600:243:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6617:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6628:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6610:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6610:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6610:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6651:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6662:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6647:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6647:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6667:2:11",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6640:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6640:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6640:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6690:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6701:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6686:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6686:18:11"
                      },
                      {
                        "hexValue": "556e617574686f72697a6520416363657373207265717565737465642c204361",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6706:34:11",
                        "type": "",
                        "value": "Unauthorize Access requested, Ca"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6679:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6679:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6679:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6761:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6772:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6757:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6757:18:11"
                      },
                      {
                        "hexValue": "6c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6777:23:11",
                        "type": "",
                        "value": "ller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6750:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6750:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6750:51:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6810:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6822:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6833:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6818:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6818:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6810:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2c23b1f872e371dbbdac103ac32e54922af5e24d43b905593ec8c18621b689b1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6577:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6591:4:11",
                "type": ""
              }
            ],
            "src": "6426:417:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7022:168:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7039:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7050:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7032:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7032:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7032:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7073:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7084:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7069:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7069:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7089:2:11",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7062:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7062:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7062:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7112:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7123:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7108:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7108:18:11"
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e2074797065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7128:20:11",
                        "type": "",
                        "value": "Invalid token type"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7101:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7101:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7101:48:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7158:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7170:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7181:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7166:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7166:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7158:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_32b066eee2f2ebf209ee952e24990e74aaae1547f80b28e921be8d8d57835439__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6999:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7013:4:11",
                "type": ""
              }
            ],
            "src": "6848:342:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7227:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7244:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7251:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7256:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7247:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7247:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7237:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7237:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7237:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7284:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7287:4:11",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7277:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7277:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7277:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7308:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7311:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7301:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7301:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7301:15:11"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "7195:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7359:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7376:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7383:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7388:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7379:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7379:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7369:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7369:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7369:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7416:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7419:4:11",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7409:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7409:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7409:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7440:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7443:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7433:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7433:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7433:15:11"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7327:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7508:79:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7518:17:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7530:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7533:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7526:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7526:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7518:4:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7559:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7561:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7561:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7561:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "7550:4:11"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7556:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7547:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7547:11:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7544:37:11"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7490:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7493:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7499:4:11",
                "type": ""
              }
            ],
            "src": "7459:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7624:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7641:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7648:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7653:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7644:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7644:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7634:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7634:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7634:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7681:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7684:4:11",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7674:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7674:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7674:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7705:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7708:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7698:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7698:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7698:15:11"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "7592:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7771:88:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7802:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7804:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7804:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7804:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7787:5:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7798:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7794:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7794:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7784:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7784:17:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7781:43:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7833:20:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7844:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7851:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7840:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7840:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7833:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7753:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7763:3:11",
                "type": ""
              }
            ],
            "src": "7724:135:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8038:176:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8055:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8066:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8048:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8048:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8048:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8089:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8100:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8085:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8085:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8105:2:11",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8078:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8078:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8078:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8128:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8139:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8124:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8124:18:11"
                      },
                      {
                        "hexValue": "496e76616c69642063616d706169676e65722061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8144:28:11",
                        "type": "",
                        "value": "Invalid campaigner address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8117:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8117:56:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8117:56:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8182:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8194:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8205:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8190:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8190:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8182:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0cf569ea440df0f4d8b17768eecc135a942ed66134b6b0d812ada466b000727f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8015:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8029:4:11",
                "type": ""
              }
            ],
            "src": "7864:350:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8393:175:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8410:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8421:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8403:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8403:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8403:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8444:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8455:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8440:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8440:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8460:2:11",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8433:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8433:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8433:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8483:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8494:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8479:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8479:18:11"
                      },
                      {
                        "hexValue": "43616d706169676e657220616c726561647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8499:27:11",
                        "type": "",
                        "value": "Campaigner already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8472:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8472:55:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8472:55:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8536:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8548:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8559:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8544:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8544:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8536:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aeeee956e29af4fe4794dee0611e344ba3f8d9243c321b3ac769ad4e22af8780__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8370:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8384:4:11",
                "type": ""
              }
            ],
            "src": "8219:349:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8674:102:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8684:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8696:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8707:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8692:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8692:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8684:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8726:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8741:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8757:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8762:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8753:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8753:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8766:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8749:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8749:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8737:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8737:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8719:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8719:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8719:51:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8643:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8654:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8665:4:11",
                "type": ""
              }
            ],
            "src": "8573:203:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8955:171:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8972:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8983:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8965:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8965:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8965:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9006:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9017:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9002:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9002:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9022:2:11",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8995:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8995:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8995:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9045:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9056:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9041:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9041:18:11"
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f742066756e6769626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9061:23:11",
                        "type": "",
                        "value": "Token is not fungible"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9034:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9034:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9034:51:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9094:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9106:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9117:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9102:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9102:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9094:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cdc1570009c599af8429ab15dd816756c1a46b11b4b11cd5018c037e55dcfb82__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8932:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8946:4:11",
                "type": ""
              }
            ],
            "src": "8781:345:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9305:224:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9322:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9333:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9315:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9315:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9315:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9356:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9367:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9352:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9352:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9372:2:11",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9345:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9345:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9345:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9395:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9406:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9391:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9391:18:11"
                      },
                      {
                        "hexValue": "52657175657374656420746f6b656e206973206e6f742077686974656c697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9411:34:11",
                        "type": "",
                        "value": "Requested token is not whitelist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9384:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9384:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9384:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9466:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9477:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9462:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9462:18:11"
                      },
                      {
                        "hexValue": "6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9482:4:11",
                        "type": "",
                        "value": "ed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9455:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9455:32:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9455:32:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9496:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9508:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9519:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9504:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9504:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9496:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4a1cdf7c8e3eba3c8071b8b1903ffe9756c5ab1be2a6f5cc5c66fb70efd659a7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9282:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9296:4:11",
                "type": ""
              }
            ],
            "src": "9131:398:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_uint32(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint32t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint32(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_a9ede49fb55d81af1d9b7332b3409302c802114c8af7894dc963b0defb92f3d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"Unauthorize Access requested, Ca\")\n        mstore(add(headStart, 96), \"ller must be owner or campaigner\")\n        mstore(add(headStart, 128), \".\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9704c2377bf36aa93a884dd9d2b88abfffbf40017d6552b0f93a386cf0aeb82e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Token is not NFT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_2c23b1f872e371dbbdac103ac32e54922af5e24d43b905593ec8c18621b689b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Unauthorize Access requested, Ca\")\n        mstore(add(headStart, 96), \"ller is not the owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_32b066eee2f2ebf209ee952e24990e74aaae1547f80b28e921be8d8d57835439__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid token type\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_0cf569ea440df0f4d8b17768eecc135a942ed66134b6b0d812ada466b000727f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid campaigner address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aeeee956e29af4fe4794dee0611e344ba3f8d9243c321b3ac769ad4e22af8780__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Campaigner already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_cdc1570009c599af8429ab15dd816756c1a46b11b4b11cd5018c037e55dcfb82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token is not fungible\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4a1cdf7c8e3eba3c8071b8b1903ffe9756c5ab1be2a6f5cc5c66fb70efd659a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Requested token is not whitelist\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "100:5114:4:-:0;;;1232:20:2;;;-1:-1:-1;;1232:20:2;1251:1;1232:20;;;100:5114:4;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "100:5114:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;930:103:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;930:103:2;;;;;;;;;;;;;;;;;;;;;1691:18:11;1679:31;;;1661:50;;1649:2;1634:18;930:103:2;;;;;;;;4535:292:4;;;;;;:::i;:::-;;:::i;412:43:2:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2564:25:11;;;2552:2;2537:18;412:43:2;2418:177:11;661:96:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:102;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;520:67;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3361:14:11;;3354:22;3336:41;;3324:2;3309:18;520:67:2;3196:187:11;279:35:2;;313:1;279:35;;;;;3562:10:11;3550:23;;;3532:42;;3520:2;3505:18;279:35:2;3388:192:11;5025:186:4;;;;;;:::i;:::-;;:::i;873:50:2:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;241:31;;271:1;241:31;;321:30;;350:1;321:30;;462:49;;;;;;:::i;:::-;;;;;;;;;;;;;;1232:20;;;;;;;;;1111:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;428:1309:4;;;;;;:::i;:::-;;:::i;:::-;;2948:352;;;;;;:::i;:::-;;:::i;1997:283::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1259:53:2:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3567:529:4;;;;;;:::i;:::-;;:::i;2601:187::-;;;;;;:::i;:::-;;:::i;4535:292::-;4695:10;2674:5:2;;-1:-1:-1;;;;;2674:5:2;2660:10;:19;;:47;;-1:-1:-1;2696:10:2;3002:4;3026:21;;;:11;:21;;;;;;;;2683:24;2638:162;;;;-1:-1:-1;;;2638:162:2;;;;;;;:::i;:::-;;;;;;;;;4726:16:4::1;::::0;::::1;350:1:2;4726:16:4;4718:45;;;::::0;-1:-1:-1;;;4718:45:4;;5864:2:11;4718:45:4::1;::::0;::::1;5846:21:11::0;5903:2;5883:18;;;5876:30;-1:-1:-1;;;5922:18:11;;;5915:46;5978:18;;4718:45:4::1;5662:340:11::0;4718:45:4::1;-1:-1:-1::0;;;;;;;4780:25:4;;::::1;;::::0;;;:13:::1;:25;::::0;;;;;;;:34;;;::::1;::::0;;;;;;;;350:1:2::1;4780:39:4::0;;;;;;;::::1;;::::0;4535:292::o;5025:186::-;5143:7;2674:5:2;;-1:-1:-1;;;;;2674:5:2;2660:10;:19;;:47;;-1:-1:-1;2696:10:2;3002:4;3026:21;;;:11;:21;;;;;;;;2683:24;2638:162;;;;-1:-1:-1;;;2638:162:2;;;;;;;:::i;:::-;5170:16:4::1;5187:15;5170:33;;;;;;:::i;:::-;;;;;;;;;;;;;;5163:40;;2811:1:2;5025:186:4::0;;;:::o;428:1309::-;2480:5:2;;-1:-1:-1;;;;;2480:5:2;2466:10;:19;2444:122;;;;-1:-1:-1;;;2444:122:2;;;;;;;:::i;:::-;596:21:4::1;::::0;::::1;313:1:2;596:21:4;::::0;:41:::1;;-1:-1:-1::0;621:16:4::1;::::0;::::1;350:1:2;621:16:4;596:41;574:109;;;::::0;-1:-1:-1;;;574:109:4;;7050:2:11;574:109:4::1;::::0;::::1;7032:21:11::0;7089:2;7069:18;;;7062:30;-1:-1:-1;;;7108:18:11;;;7101:48;7166:18;;574:109:4::1;6848:342:11::0;574:109:4::1;700:13;:59;;;;-1:-1:-1::0;718:27:4::1;::::0;::::1;;::::0;;;:16:::1;:27;::::0;;;;;;;-1:-1:-1;;;;;718:41:4;::::1;::::0;;;;;;;;::::1;;717:42;700:59;696:1034;;;-1:-1:-1::0;836:27:4::1;;;::::0;;;:16:::1;:27;::::0;;;;;;;-1:-1:-1;;;;;836:41:4;;;::::1;::::0;;;;;;;;;:48;;-1:-1:-1;;836:48:4::1;880:4;836:48:::0;;::::1;::::0;;;899:31;;;:20:::1;:31:::0;;;;:50;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;899:50:4::1;::::0;;::::1;::::0;;428:1309::o;696:1034::-:1;986:13;985:14;:59;;;;-1:-1:-1::0;1003:27:4::1;::::0;::::1;;::::0;;;:16:::1;:27;::::0;;;;;;;-1:-1:-1;;;;;1003:41:4;::::1;::::0;;;;;;;;::::1;;985:59;967:763;;;1134:27;::::0;::::1;1178:5;1134:27:::0;;;:16:::1;:27;::::0;;;;;;;-1:-1:-1;;;;;1134:41:4;::::1;::::0;;;;;;;:49;;-1:-1:-1;;1134:49:4::1;::::0;;1280:31;;;:20:::1;:31:::0;;;;;:38;;1333:386:::1;1357:6;1353:1;:10;1333:386;;;1393:31;::::0;::::1;;::::0;;;:20:::1;:31;::::0;;;;:34;;-1:-1:-1;;;;;1393:50:4;::::1;::::0;:31;1425:1;;1393:34;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;1393:34:4::1;:50:::0;1389:315:::1;;1505:79;::::0;::::1;;::::0;;;:20:::1;:79;::::0;;;;1585:10:::1;1594:1;1585:6:::0;:10:::1;:::i;:::-;1505:91;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;1468:31:::1;::::0;::::1;::::0;;:20:::1;:31:::0;;;;;;;:34;;-1:-1:-1;;;;;1505:91:4;;::::1;::::0;1500:1;;1468:34;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:128:::0;;-1:-1:-1;;;;;;1468:128:4::1;-1:-1:-1::0;;;;;1468:128:4;;;::::1;::::0;;;::::1;::::0;;;1619:31:::1;::::0;::::1;::::0;;:20:::1;:31:::0;;;;;;:37;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;1619:37:4;;;;;-1:-1:-1;;;;;;1619:37:4::1;::::0;;;;;1679:5:::1;;1389:315;1365:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1333:386;;;;1056:674;967:763;428:1309:::0;;;:::o;2948:352::-;2480:5:2;;-1:-1:-1;;;;;2480:5:2;2466:10;:19;2444:122;;;;-1:-1:-1;;;2444:122:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;3030:27:4;::::1;3022:66;;;::::0;-1:-1:-1;;;3022:66:4;;8066:2:11;3022:66:4::1;::::0;::::1;8048:21:11::0;8105:2;8085:18;;;8078:30;8144:28;8124:18;;;8117:56;8190:18;;3022:66:4::1;7864:350:11::0;3022:66:4::1;-1:-1:-1::0;;;;;3026:21:2;;3002:4;3026:21;;;:11;:21;;;;;;;;3099:65:4::1;;;::::0;-1:-1:-1;;;3099:65:4;;8421:2:11;3099:65:4::1;::::0;::::1;8403:21:11::0;8460:2;8440:18;;;8433:30;8499:27;8479:18;;;8472:55;8544:18;;3099:65:4::1;8219:349:11::0;3099:65:4::1;-1:-1:-1::0;;;;;3175:26:4;::::1;;::::0;;;3204:4:::1;3175:26;::::0;;;;;;;:33;;-1:-1:-1;;3175:33:4::1;::::0;;::::1;::::0;;;3219:8:::1;:23:::0;;;;;:27;;;;3262:30;8719:51:11;;;3262:30:4::1;::::0;8692:18:11;3262:30:4::1;;;;;;;2948:352:::0;:::o;1997:283::-;2085:16;2136:21;;;313:1:2;2136:21:4;;:41;;-1:-1:-1;2161:16:4;;;350:1:2;2161:16:4;2136:41;2114:109;;;;-1:-1:-1;;;2114:109:4;;7050:2:11;2114:109:4;;;7032:21:11;7089:2;7069:18;;;7062:30;-1:-1:-1;;;7108:18:11;;;7101:48;7166:18;;2114:109:4;6848:342:11;2114:109:4;2241:31;;;;;;;:20;:31;;;;;;;;;2234:38;;;;;;;;;;;;;;;;;2241:31;;2234:38;;2241:31;2234:38;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2234:38:4;;;;;;;;;;;;;;;;;;;;;;;1997:283;;;:::o;3567:529::-;3732:10;2674:5:2;;-1:-1:-1;;;;;2674:5:2;2660:10;:19;;:47;;-1:-1:-1;2696:10:2;3002:4;3026:21;;;:11;:21;;;;;;;;2683:24;2638:162;;;;-1:-1:-1;;;2638:162:2;;;;;;;:::i;:::-;3804:21:4::1;::::0;::::1;313:1:2;3804:21:4;3796:55;;;::::0;-1:-1:-1;;;3796:55:4;;8983:2:11;3796:55:4::1;::::0;::::1;8965:21:11::0;9022:2;9002:18;;;8995:30;-1:-1:-1;;;9041:18:11;;;9034:51;9102:18;;3796:55:4::1;8781:345:11::0;3796:55:4::1;3928:37;313:1:2;3957:7:4;3928:18;:37::i;:::-;3906:121;;;::::0;-1:-1:-1;;;3906:121:4;;9333:2:11;3906:121:4::1;::::0;::::1;9315:21:11::0;9372:2;9352:18;;;9345:30;9411:34;9391:18;;;9384:62;-1:-1:-1;;;9462:18:11;;;9455:32;9504:19;;3906:121:4::1;9131:398:11::0;3906:121:4::1;-1:-1:-1::0;;;;;;;4044:25:4;;::::1;;::::0;;;:13:::1;:25;::::0;;;;;;;:34;;;::::1;::::0;;;;;;;;313:1:2::1;4044:44:4::0;;;;;;;::::1;;::::0;3567:529::o;2601:187::-;2739:27;;;2715:4;2739:27;;;:16;:27;;;;;;;;-1:-1:-1;;;;;2739:41:4;;;;;;;;;;;;2601:187;;;;;:::o;14:127:11:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:11;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:173::-;938:20;;-1:-1:-1;;;;;987:31:11;;977:42;;967:70;;1033:1;1030;1023:12;1048:464;1135:6;1143;1151;1204:2;1192:9;1183:7;1179:23;1175:32;1172:52;;;1220:1;1217;1210:12;1172:52;1260:9;1247:23;1293:18;1285:6;1282:30;1279:50;;;1325:1;1322;1315:12;1279:50;1348;1390:7;1381:6;1370:9;1366:22;1348:50;:::i;:::-;1338:60;;;1417:38;1451:2;1440:9;1436:18;1417:38;:::i;:::-;1407:48;;1502:2;1491:9;1487:18;1474:32;1464:42;;1048:464;;;;;:::o;1722:163::-;1789:20;;1849:10;1838:22;;1828:33;;1818:61;;1875:1;1872;1865:12;1890:332;1966:6;1974;1982;2035:2;2023:9;2014:7;2010:23;2006:32;2003:52;;;2051:1;2048;2041:12;2003:52;2074:29;2093:9;2074:29;:::i;:::-;2064:39;;2122:38;2156:2;2145:9;2141:18;2122:38;:::i;:::-;2112:48;;2179:37;2212:2;2201:9;2197:18;2179:37;:::i;:::-;2169:47;;1890:332;;;;;:::o;2227:186::-;2286:6;2339:2;2327:9;2318:7;2314:23;2310:32;2307:52;;;2355:1;2352;2345:12;2307:52;2378:29;2397:9;2378:29;:::i;:::-;2368:39;2227:186;-1:-1:-1;;;2227:186:11:o;2600:328::-;2677:6;2685;2693;2746:2;2734:9;2725:7;2721:23;2717:32;2714:52;;;2762:1;2759;2752:12;2714:52;2785:29;2804:9;2785:29;:::i;:::-;2775:39;;2833:38;2867:2;2856:9;2852:18;2833:38;:::i;2933:258::-;3000:6;3008;3061:2;3049:9;3040:7;3036:23;3032:32;3029:52;;;3077:1;3074;3067:12;3029:52;3100:28;3118:9;3100:28;:::i;:::-;3090:38;;3147;3181:2;3170:9;3166:18;3147:38;:::i;:::-;3137:48;;2933:258;;;;;:::o;3585:322::-;3654:6;3707:2;3695:9;3686:7;3682:23;3678:32;3675:52;;;3723:1;3720;3713:12;3675:52;3763:9;3750:23;3796:18;3788:6;3785:30;3782:50;;;3828:1;3825;3818:12;3782:50;3851;3893:7;3884:6;3873:9;3869:22;3851:50;:::i;:::-;3841:60;3585:322;-1:-1:-1;;;;3585:322:11:o;3912:419::-;3985:6;3993;4001;4054:2;4042:9;4033:7;4029:23;4025:32;4022:52;;;4070:1;4067;4060:12;4022:52;4093:29;4112:9;4093:29;:::i;:::-;4083:39;;4141:37;4174:2;4163:9;4159:18;4141:37;:::i;:::-;4131:47;;4228:2;4217:9;4213:18;4200:32;4275:5;4268:13;4261:21;4254:5;4251:32;4241:60;;4297:1;4294;4287:12;4241:60;4320:5;4310:15;;;3912:419;;;;;:::o;4336:184::-;4394:6;4447:2;4435:9;4426:7;4422:23;4418:32;4415:52;;;4463:1;4460;4453:12;4415:52;4486:28;4504:9;4486:28;:::i;4525:658::-;4696:2;4748:21;;;4818:13;;4721:18;;;4840:22;;;4667:4;;4696:2;4919:15;;;;4893:2;4878:18;;;4667:4;4962:195;4976:6;4973:1;4970:13;4962:195;;;5041:13;;-1:-1:-1;;;;;5037:39:11;5025:52;;5132:15;;;;5097:12;;;;5073:1;4991:9;4962:195;;;-1:-1:-1;5174:3:11;;4525:658;-1:-1:-1;;;;;;4525:658:11:o;5188:469::-;5390:2;5372:21;;;5429:2;5409:18;;;5402:30;5468:34;5463:2;5448:18;;5441:62;5539:34;5534:2;5519:18;;5512:62;-1:-1:-1;;;5605:3:11;5590:19;;5583:32;5647:3;5632:19;;5188:469::o;6007:414::-;6138:3;6176:6;6170:13;6201:1;6211:129;6225:6;6222:1;6219:13;6211:129;;;6323:4;6307:14;;;6303:25;;6297:32;6284:11;;;6277:53;6240:12;6211:129;;;-1:-1:-1;6395:1:11;6359:16;;6384:13;;;-1:-1:-1;6359:16:11;6007:414;-1:-1:-1;6007:414:11:o;6426:417::-;6628:2;6610:21;;;6667:2;6647:18;;;6640:30;6706:34;6701:2;6686:18;;6679:62;-1:-1:-1;;;6772:2:11;6757:18;;6750:51;6833:3;6818:19;;6426:417::o;7195:127::-;7256:10;7251:3;7247:20;7244:1;7237:31;7287:4;7284:1;7277:15;7311:4;7308:1;7301:15;7327:127;7388:10;7383:3;7379:20;7376:1;7369:31;7419:4;7416:1;7409:15;7443:4;7440:1;7433:15;7459:128;7526:9;;;7547:11;;;7544:37;;;7561:18;;:::i;7592:127::-;7653:10;7648:3;7644:20;7641:1;7634:31;7684:4;7681:1;7674:15;7708:4;7705:1;7698:15;7724:135;7763:3;7784:17;;;7781:43;;7804:18;;:::i;:::-;-1:-1:-1;7851:1:11;7840:13;;7724:135::o",
  "source": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.17;\r\n\r\nimport \"./HashbuzzStates.sol\";\r\ncontract Utils is HashbuzzStates {\r\n    /**\r\n     * @dev Adds or removes a token from the whitelist.\r\n     * @param tokenAddress The address of the token.\r\n     * @param tokenType The type of the token (1 for FUNGIBLE, 2 for NFT).\r\n     * @param isWhitelisted Boolean flag to mark the token as whitelisted or not.\r\n     */\r\n    function associateToken(\r\n        address tokenAddress,\r\n        uint32 tokenType,\r\n        bool isWhitelisted\r\n    ) public onlyOwner {\r\n        require(\r\n            tokenType == FUNGIBLE || tokenType == NFT,\r\n            \"Invalid token type\"\r\n        );\r\n\r\n        if (isWhitelisted && !whitelistedToken[tokenType][tokenAddress]) {\r\n            // Add to whitelist if not already whitelisted\r\n            whitelistedToken[tokenType][tokenAddress] = true;\r\n            whitelistedAddresses[tokenType].push(tokenAddress);\r\n        } else if (\r\n            !isWhitelisted && whitelistedToken[tokenType][tokenAddress]\r\n        ) {\r\n            // Remove from whitelist if currently whitelisted\r\n            whitelistedToken[tokenType][tokenAddress] = false;\r\n\r\n            // Remove address from whitelistedAddresses array\r\n            uint256 length = whitelistedAddresses[tokenType].length;\r\n            for (uint256 i = 0; i < length; i++) {\r\n                if (whitelistedAddresses[tokenType][i] == tokenAddress) {\r\n                    whitelistedAddresses[tokenType][i] = whitelistedAddresses[\r\n                        tokenType\r\n                    ][length - 1];\r\n                    whitelistedAddresses[tokenType].pop();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves all whitelisted addresses for a given token type.\r\n     * @param tokenType The type of the token (1 for FUNGIBLE, 2 for NFT).\r\n     * @return An array of addresses that are whitelisted for the given token type.\r\n     */\r\n    function getAllWhitelistedTokens(\r\n        uint32 tokenType\r\n    ) public view returns (address[] memory) {\r\n        require(\r\n            tokenType == FUNGIBLE || tokenType == NFT,\r\n            \"Invalid token type\"\r\n        );\r\n        return whitelistedAddresses[tokenType];\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a specific token address is whitelisted for a given token type.\r\n     * @param tokenType The type of the token (1 for FUNGIBLE, 2 for NFT).\r\n     * @param tokenAddress The address of the token to check.\r\n     * @return Boolean flag indicating if the token is whitelisted.\r\n     */\r\n    function isTokenWhitelisted(\r\n        uint32 tokenType,\r\n        address tokenAddress\r\n    ) public view returns (bool) {\r\n        return whitelistedToken[tokenType][tokenAddress];\r\n    }\r\n\r\n    /**\r\n     * @dev Whitelist cmapigner to the user.\r\n     * @param newCampaigner Address of the user having campaigner role to be used here\r\n     */\r\n    function addCampaigner(address newCampaigner) public onlyOwner {\r\n        require(newCampaigner != address(0), \"Invalid campaigner address\");\r\n        require(isCampaigner(newCampaigner), \"Campaigner already exists\");\r\n        campaigners[newCampaigner] = true;\r\n        balances[newCampaigner] = 0;\r\n        emit CampaignerAdded(newCampaigner);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param campaigner Address of the campaigner'solidity address\r\n     * @param tokenId Solidity address used for the account\r\n     * @param tokenType The type of the token (FUNGIBLE or NFT) [uint32] (1 for FUNGIBLE & 2 for NFT)\r\n     */\r\n    function getFungibleTokenBalance(\r\n        address campaigner,\r\n        address tokenId,\r\n        uint32 tokenType\r\n    ) public view onlyOwnerOrCampaigner returns (uint64 res) {\r\n        // tokentype should be fungible\r\n        require(tokenType == FUNGIBLE, \"Token is not fungible\");\r\n        // required token to be associated\r\n        require(\r\n            isTokenWhitelisted(FUNGIBLE, tokenId),\r\n            \"Requested token is not whitelisted\"\r\n        );\r\n        res = tokenBalances[campaigner][tokenId][FUNGIBLE];\r\n    }\r\n\r\n    /** Balance Query functions only callable by campaigner it self and no others else */\r\n    /**\r\n     * @dev Balance holded by the user to see.\r\n     * @param campaigner Solidity address of the campaigner.\r\n     * @param tokenId Solidity address of the token.\r\n     * @param tokenType The type of the token (FUNGIBLE or NFT) [uint32] (1 for FUNGIBLE & 2 for NFT)\r\n     *                  1 for FUNGIBLE and 2 for NFT.\r\n     */\r\n    function getNFTTokenBalance(\r\n        address campaigner,\r\n        address tokenId,\r\n        uint32 tokenType\r\n    ) public view onlyOwnerOrCampaigner returns (uint64 res) {\r\n        require(tokenType == NFT, \"Token is not NFT\");\r\n        res = tokenBalances[campaigner][tokenId][NFT];\r\n    }\r\n\r\n    /** Campaign Specific balance for the cmapigners */\r\n    /**\r\n     * @dev Balance holded by the user to see.\r\n     * @param campaignAddress Solidity address of the campaigner.\r\n     */\r\n    function getCampaignBalance(\r\n        string memory campaignAddress\r\n    ) public view onlyOwnerOrCampaigner returns (uint256) {\r\n        return campaignBalances[campaignAddress];\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\rajatk\\hashbuzz-staging\\smv201\\contracts\\HashbuzzModules\\Utils.sol",
  "ast": {
    "absolutePath": "project:/contracts/HashbuzzModules/Utils.sol",
    "exportedSymbols": {
      "HashbuzzStates": [
        1057
      ],
      "Utils": [
        1623
      ]
    },
    "id": 1624,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1332,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:24:4"
      },
      {
        "absolutePath": "project:/contracts/HashbuzzModules/HashbuzzStates.sol",
        "file": "./HashbuzzStates.sol",
        "id": 1333,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1624,
        "sourceUnit": 1058,
        "src": "68:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1334,
              "name": "HashbuzzStates",
              "nameLocations": [
                "118:14:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1057,
              "src": "118:14:4"
            },
            "id": 1335,
            "nodeType": "InheritanceSpecifier",
            "src": "118:14:4"
          }
        ],
        "canonicalName": "Utils",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1623,
        "linearizedBaseContracts": [
          1623,
          1057
        ],
        "name": "Utils",
        "nameLocation": "109:5:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1450,
              "nodeType": "Block",
              "src": "563:1174:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1348,
                            "name": "tokenType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "596:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1349,
                            "name": "FUNGIBLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "609:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "596:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1351,
                            "name": "tokenType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "621:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1352,
                            "name": "NFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "634:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "621:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "596:41:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e2074797065",
                        "id": 1355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "652:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32b066eee2f2ebf209ee952e24990e74aaae1547f80b28e921be8d8d57835439",
                          "typeString": "literal_string \"Invalid token type\""
                        },
                        "value": "Invalid token type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32b066eee2f2ebf209ee952e24990e74aaae1547f80b28e921be8d8d57835439",
                          "typeString": "literal_string \"Invalid token type\""
                        }
                      ],
                      "id": 1347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "574:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "574:109:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1357,
                  "nodeType": "ExpressionStatement",
                  "src": "574:109:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1358,
                      "name": "isWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1342,
                      "src": "700:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 1364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "717:42:4",
                      "subExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1359,
                            "name": "whitelistedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "718:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(uint32 => mapping(address => bool))"
                            }
                          },
                          "id": 1361,
                          "indexExpression": {
                            "id": 1360,
                            "name": "tokenType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "735:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "718:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1363,
                        "indexExpression": {
                          "id": 1362,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1338,
                          "src": "746:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "718:41:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "700:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "985:14:4",
                        "subExpression": {
                          "id": 1382,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1342,
                          "src": "986:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1384,
                            "name": "whitelistedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "1003:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(uint32 => mapping(address => bool))"
                            }
                          },
                          "id": 1386,
                          "indexExpression": {
                            "id": 1385,
                            "name": "tokenType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "1020:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1003:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1388,
                        "indexExpression": {
                          "id": 1387,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1338,
                          "src": "1031:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1003:41:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "985:59:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1448,
                    "nodeType": "IfStatement",
                    "src": "967:763:4",
                    "trueBody": {
                      "id": 1447,
                      "nodeType": "Block",
                      "src": "1056:674:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 1396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1390,
                                  "name": "whitelistedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 872,
                                  "src": "1134:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                                    "typeString": "mapping(uint32 => mapping(address => bool))"
                                  }
                                },
                                "id": 1393,
                                "indexExpression": {
                                  "id": 1391,
                                  "name": "tokenType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1340,
                                  "src": "1151:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1134:27:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1394,
                              "indexExpression": {
                                "id": 1392,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1338,
                                "src": "1162:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "1134:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "66616c7365",
                              "id": 1395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1178:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "1134:49:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1397,
                          "nodeType": "ExpressionStatement",
                          "src": "1134:49:4"
                        },
                        {
                          "assignments": [
                            1399
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1399,
                              "mutability": "mutable",
                              "name": "length",
                              "nameLocation": "1271:6:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 1447,
                              "src": "1263:14:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1398,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1263:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1404,
                          "initialValue": {
                            "expression": {
                              "baseExpression": {
                                "id": 1400,
                                "name": "whitelistedAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "1280:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(uint32 => address[] storage ref)"
                                }
                              },
                              "id": 1402,
                              "indexExpression": {
                                "id": 1401,
                                "name": "tokenType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "1301:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1280:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1312:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1280:38:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1263:55:4"
                        },
                        {
                          "body": {
                            "id": 1445,
                            "nodeType": "Block",
                            "src": "1370:349:4",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1415,
                                        "name": "whitelistedAddresses",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 877,
                                        "src": "1393:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(uint32 => address[] storage ref)"
                                        }
                                      },
                                      "id": 1417,
                                      "indexExpression": {
                                        "id": 1416,
                                        "name": "tokenType",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1340,
                                        "src": "1414:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1393:31:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1419,
                                    "indexExpression": {
                                      "id": 1418,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1406,
                                      "src": "1425:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1393:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1420,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1338,
                                    "src": "1431:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1393:50:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1444,
                                "nodeType": "IfStatement",
                                "src": "1389:315:4",
                                "trueBody": {
                                  "id": 1443,
                                  "nodeType": "Block",
                                  "src": "1445:259:4",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 1434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1422,
                                              "name": "whitelistedAddresses",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 877,
                                              "src": "1468:20:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                                "typeString": "mapping(uint32 => address[] storage ref)"
                                              }
                                            },
                                            "id": 1425,
                                            "indexExpression": {
                                              "id": 1423,
                                              "name": "tokenType",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1340,
                                              "src": "1489:9:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "1468:31:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1426,
                                          "indexExpression": {
                                            "id": 1424,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1406,
                                            "src": "1500:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "1468:34:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1427,
                                              "name": "whitelistedAddresses",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 877,
                                              "src": "1505:20:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                                "typeString": "mapping(uint32 => address[] storage ref)"
                                              }
                                            },
                                            "id": 1429,
                                            "indexExpression": {
                                              "id": 1428,
                                              "name": "tokenType",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1340,
                                              "src": "1552:9:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "1505:79:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1433,
                                          "indexExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1432,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1430,
                                              "name": "length",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1399,
                                              "src": "1585:6:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 1431,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1594:1:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "1585:10:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1505:91:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "1468:128:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1435,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1468:128:4"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1436,
                                              "name": "whitelistedAddresses",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 877,
                                              "src": "1619:20:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                                "typeString": "mapping(uint32 => address[] storage ref)"
                                              }
                                            },
                                            "id": 1438,
                                            "indexExpression": {
                                              "id": 1437,
                                              "name": "tokenType",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1340,
                                              "src": "1640:9:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "1619:31:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1439,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1651:3:4",
                                          "memberName": "pop",
                                          "nodeType": "MemberAccess",
                                          "src": "1619:35:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                            "typeString": "function (address[] storage pointer)"
                                          }
                                        },
                                        "id": 1440,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1619:37:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1441,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1619:37:4"
                                    },
                                    {
                                      "id": 1442,
                                      "nodeType": "Break",
                                      "src": "1679:5:4"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1409,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1406,
                              "src": "1353:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1410,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "1357:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1353:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1446,
                          "initializationExpression": {
                            "assignments": [
                              1406
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1406,
                                "mutability": "mutable",
                                "name": "i",
                                "nameLocation": "1346:1:4",
                                "nodeType": "VariableDeclaration",
                                "scope": 1446,
                                "src": "1338:9:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1405,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1338:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1408,
                            "initialValue": {
                              "hexValue": "30",
                              "id": 1407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1350:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1338:13:4"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 1413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "1365:3:4",
                              "subExpression": {
                                "id": 1412,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1406,
                                "src": "1365:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1414,
                            "nodeType": "ExpressionStatement",
                            "src": "1365:3:4"
                          },
                          "nodeType": "ForStatement",
                          "src": "1333:386:4"
                        }
                      ]
                    }
                  },
                  "id": 1449,
                  "nodeType": "IfStatement",
                  "src": "696:1034:4",
                  "trueBody": {
                    "id": 1381,
                    "nodeType": "Block",
                    "src": "761:200:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1366,
                                "name": "whitelistedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 872,
                                "src": "836:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(uint32 => mapping(address => bool))"
                                }
                              },
                              "id": 1369,
                              "indexExpression": {
                                "id": 1367,
                                "name": "tokenType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "853:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "836:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1370,
                            "indexExpression": {
                              "id": 1368,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1338,
                              "src": "864:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "836:41:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "880:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "836:48:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1373,
                        "nodeType": "ExpressionStatement",
                        "src": "836:48:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1378,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1338,
                              "src": "936:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1374,
                                "name": "whitelistedAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "899:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(uint32 => address[] storage ref)"
                                }
                              },
                              "id": 1376,
                              "indexExpression": {
                                "id": 1375,
                                "name": "tokenType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "920:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "899:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "931:4:4",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "899:36:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "899:50:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1380,
                        "nodeType": "ExpressionStatement",
                        "src": "899:50:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1336,
              "nodeType": "StructuredDocumentation",
              "src": "140:282:4",
              "text": " @dev Adds or removes a token from the whitelist.\n @param tokenAddress The address of the token.\n @param tokenType The type of the token (1 for FUNGIBLE, 2 for NFT).\n @param isWhitelisted Boolean flag to mark the token as whitelisted or not."
            },
            "functionSelector": "bde81c0b",
            "id": 1451,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1345,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1344,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "553:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1026,
                  "src": "553:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "553:9:4"
              }
            ],
            "name": "associateToken",
            "nameLocation": "437:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "470:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "462:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1340,
                  "mutability": "mutable",
                  "name": "tokenType",
                  "nameLocation": "500:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "493:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "isWhitelisted",
                  "nameLocation": "525:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "520:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "451:94:4"
            },
            "returnParameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:4"
            },
            "scope": 1623,
            "src": "428:1309:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1475,
              "nodeType": "Block",
              "src": "2103:177:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1461,
                            "name": "tokenType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "2136:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1462,
                            "name": "FUNGIBLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "2149:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "2136:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 1466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1464,
                            "name": "tokenType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "2161:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1465,
                            "name": "NFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "2174:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "2161:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2136:41:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e2074797065",
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2192:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32b066eee2f2ebf209ee952e24990e74aaae1547f80b28e921be8d8d57835439",
                          "typeString": "literal_string \"Invalid token type\""
                        },
                        "value": "Invalid token type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32b066eee2f2ebf209ee952e24990e74aaae1547f80b28e921be8d8d57835439",
                          "typeString": "literal_string \"Invalid token type\""
                        }
                      ],
                      "id": 1460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2114:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2114:109:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1470,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:109:4"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1471,
                      "name": "whitelistedAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 877,
                      "src": "2241:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(uint32 => address[] storage ref)"
                      }
                    },
                    "id": 1473,
                    "indexExpression": {
                      "id": 1472,
                      "name": "tokenType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1454,
                      "src": "2262:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2241:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1459,
                  "id": 1474,
                  "nodeType": "Return",
                  "src": "2234:38:4"
                }
              ]
            },
            "documentation": {
              "id": 1452,
              "nodeType": "StructuredDocumentation",
              "src": "1745:246:4",
              "text": " @dev Retrieves all whitelisted addresses for a given token type.\n @param tokenType The type of the token (1 for FUNGIBLE, 2 for NFT).\n @return An array of addresses that are whitelisted for the given token type."
            },
            "functionSelector": "c1cde80c",
            "id": 1476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllWhitelistedTokens",
            "nameLocation": "2006:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1454,
                  "mutability": "mutable",
                  "name": "tokenType",
                  "nameLocation": "2047:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1476,
                  "src": "2040:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2029:34:4"
            },
            "returnParameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1458,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1476,
                  "src": "2085:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1456,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2085:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1457,
                    "nodeType": "ArrayTypeName",
                    "src": "2085:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:18:4"
            },
            "scope": 1623,
            "src": "1997:283:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1492,
              "nodeType": "Block",
              "src": "2721:67:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1486,
                        "name": "whitelistedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "2739:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(uint32 => mapping(address => bool))"
                        }
                      },
                      "id": 1488,
                      "indexExpression": {
                        "id": 1487,
                        "name": "tokenType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "2756:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2739:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1490,
                    "indexExpression": {
                      "id": 1489,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1481,
                      "src": "2767:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2739:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1485,
                  "id": 1491,
                  "nodeType": "Return",
                  "src": "2732:48:4"
                }
              ]
            },
            "documentation": {
              "id": 1477,
              "nodeType": "StructuredDocumentation",
              "src": "2288:307:4",
              "text": " @dev Checks if a specific token address is whitelisted for a given token type.\n @param tokenType The type of the token (1 for FUNGIBLE, 2 for NFT).\n @param tokenAddress The address of the token to check.\n @return Boolean flag indicating if the token is whitelisted."
            },
            "functionSelector": "f4ff52ae",
            "id": 1493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenWhitelisted",
            "nameLocation": "2610:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "tokenType",
                  "nameLocation": "2646:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "2639:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2639:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2674:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "2666:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2628:65:4"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "2715:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2715:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2714:6:4"
            },
            "scope": 1623,
            "src": "2601:187:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1534,
              "nodeType": "Block",
              "src": "3011:289:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1502,
                          "name": "newCampaigner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1496,
                          "src": "3030:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3055:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3047:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1503,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3047:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3030:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642063616d706169676e65722061646472657373",
                        "id": 1508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3059:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0cf569ea440df0f4d8b17768eecc135a942ed66134b6b0d812ada466b000727f",
                          "typeString": "literal_string \"Invalid campaigner address\""
                        },
                        "value": "Invalid campaigner address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0cf569ea440df0f4d8b17768eecc135a942ed66134b6b0d812ada466b000727f",
                          "typeString": "literal_string \"Invalid campaigner address\""
                        }
                      ],
                      "id": 1501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3022:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3022:66:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1510,
                  "nodeType": "ExpressionStatement",
                  "src": "3022:66:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1513,
                            "name": "newCampaigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "3120:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1512,
                          "name": "isCampaigner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1056,
                          "src": "3107:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3107:27:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616d706169676e657220616c726561647920657869737473",
                        "id": 1515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3136:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aeeee956e29af4fe4794dee0611e344ba3f8d9243c321b3ac769ad4e22af8780",
                          "typeString": "literal_string \"Campaigner already exists\""
                        },
                        "value": "Campaigner already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aeeee956e29af4fe4794dee0611e344ba3f8d9243c321b3ac769ad4e22af8780",
                          "typeString": "literal_string \"Campaigner already exists\""
                        }
                      ],
                      "id": 1511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3099:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3099:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1517,
                  "nodeType": "ExpressionStatement",
                  "src": "3099:65:4"
                },
                {
                  "expression": {
                    "id": 1522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1518,
                        "name": "campaigners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 858,
                        "src": "3175:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1520,
                      "indexExpression": {
                        "id": 1519,
                        "name": "newCampaigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1496,
                        "src": "3187:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3175:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3204:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3175:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1523,
                  "nodeType": "ExpressionStatement",
                  "src": "3175:33:4"
                },
                {
                  "expression": {
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1524,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "3219:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1526,
                      "indexExpression": {
                        "id": 1525,
                        "name": "newCampaigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1496,
                        "src": "3228:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3219:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3245:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3219:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1529,
                  "nodeType": "ExpressionStatement",
                  "src": "3219:27:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1531,
                        "name": "newCampaigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1496,
                        "src": "3278:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1530,
                      "name": "CampaignerAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 940,
                      "src": "3262:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1533,
                  "nodeType": "EmitStatement",
                  "src": "3257:35:4"
                }
              ]
            },
            "documentation": {
              "id": 1494,
              "nodeType": "StructuredDocumentation",
              "src": "2796:146:4",
              "text": " @dev Whitelist cmapigner to the user.\n @param newCampaigner Address of the user having campaigner role to be used here"
            },
            "functionSelector": "bff31996",
            "id": 1535,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1499,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1498,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3001:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1026,
                  "src": "3001:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3001:9:4"
              }
            ],
            "name": "addCampaigner",
            "nameLocation": "2957:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1496,
                  "mutability": "mutable",
                  "name": "newCampaigner",
                  "nameLocation": "2979:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "2971:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2970:23:4"
            },
            "returnParameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3011:0:4"
            },
            "scope": 1623,
            "src": "2948:352:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1574,
              "nodeType": "Block",
              "src": "3744:352:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1550,
                          "name": "tokenType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1542,
                          "src": "3804:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1551,
                          "name": "FUNGIBLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 851,
                          "src": "3817:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "3804:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f742066756e6769626c65",
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3827:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdc1570009c599af8429ab15dd816756c1a46b11b4b11cd5018c037e55dcfb82",
                          "typeString": "literal_string \"Token is not fungible\""
                        },
                        "value": "Token is not fungible"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdc1570009c599af8429ab15dd816756c1a46b11b4b11cd5018c037e55dcfb82",
                          "typeString": "literal_string \"Token is not fungible\""
                        }
                      ],
                      "id": 1549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3796:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3796:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1555,
                  "nodeType": "ExpressionStatement",
                  "src": "3796:55:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1558,
                            "name": "FUNGIBLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "3947:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 1559,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "3957:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1557,
                          "name": "isTokenWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1493,
                          "src": "3928:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint32,address) view returns (bool)"
                          }
                        },
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3928:37:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175657374656420746f6b656e206973206e6f742077686974656c6973746564",
                        "id": 1561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3980:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a1cdf7c8e3eba3c8071b8b1903ffe9756c5ab1be2a6f5cc5c66fb70efd659a7",
                          "typeString": "literal_string \"Requested token is not whitelisted\""
                        },
                        "value": "Requested token is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a1cdf7c8e3eba3c8071b8b1903ffe9756c5ab1be2a6f5cc5c66fb70efd659a7",
                          "typeString": "literal_string \"Requested token is not whitelisted\""
                        }
                      ],
                      "id": 1556,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3906:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3906:121:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "3906:121:4"
                },
                {
                  "expression": {
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1564,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1547,
                      "src": "4038:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1565,
                            "name": "tokenBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 885,
                            "src": "4044:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint64_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint64)))"
                            }
                          },
                          "id": 1567,
                          "indexExpression": {
                            "id": 1566,
                            "name": "campaigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1538,
                            "src": "4058:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4044:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint64_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint64))"
                          }
                        },
                        "id": 1569,
                        "indexExpression": {
                          "id": 1568,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1540,
                          "src": "4070:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4044:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint64_$",
                          "typeString": "mapping(uint256 => uint64)"
                        }
                      },
                      "id": 1571,
                      "indexExpression": {
                        "id": 1570,
                        "name": "FUNGIBLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "4079:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4044:44:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4038:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1573,
                  "nodeType": "ExpressionStatement",
                  "src": "4038:50:4"
                }
              ]
            },
            "documentation": {
              "id": 1536,
              "nodeType": "StructuredDocumentation",
              "src": "3308:253:4",
              "text": " @param campaigner Address of the campaigner'solidity address\n @param tokenId Solidity address used for the account\n @param tokenType The type of the token (FUNGIBLE or NFT) [uint32] (1 for FUNGIBLE & 2 for NFT)"
            },
            "functionSelector": "d84c0e27",
            "id": 1575,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1544,
                  "name": "onlyOwnerOrCampaigner",
                  "nameLocations": [
                    "3701:21:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1043,
                  "src": "3701:21:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3701:21:4"
              }
            ],
            "name": "getFungibleTokenBalance",
            "nameLocation": "3576:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "mutability": "mutable",
                  "name": "campaigner",
                  "nameLocation": "3618:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "3610:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1540,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3647:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "3639:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3639:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "tokenType",
                  "nameLocation": "3672:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "3665:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1541,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3665:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3599:89:4"
            },
            "returnParameters": {
              "id": 1548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1547,
                  "mutability": "mutable",
                  "name": "res",
                  "nameLocation": "3739:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "3732:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3731:12:4"
            },
            "scope": 1623,
            "src": "3567:529:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1606,
              "nodeType": "Block",
              "src": "4707:120:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1590,
                          "name": "tokenType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1582,
                          "src": "4726:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1591,
                          "name": "NFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "4739:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "4726:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f74204e4654",
                        "id": 1593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4744:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9704c2377bf36aa93a884dd9d2b88abfffbf40017d6552b0f93a386cf0aeb82e",
                          "typeString": "literal_string \"Token is not NFT\""
                        },
                        "value": "Token is not NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9704c2377bf36aa93a884dd9d2b88abfffbf40017d6552b0f93a386cf0aeb82e",
                          "typeString": "literal_string \"Token is not NFT\""
                        }
                      ],
                      "id": 1589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4718:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4718:45:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1595,
                  "nodeType": "ExpressionStatement",
                  "src": "4718:45:4"
                },
                {
                  "expression": {
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1596,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1587,
                      "src": "4774:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1597,
                            "name": "tokenBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 885,
                            "src": "4780:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint64_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint64)))"
                            }
                          },
                          "id": 1599,
                          "indexExpression": {
                            "id": 1598,
                            "name": "campaigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "4794:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4780:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint64_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint64))"
                          }
                        },
                        "id": 1601,
                        "indexExpression": {
                          "id": 1600,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1580,
                          "src": "4806:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4780:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint64_$",
                          "typeString": "mapping(uint256 => uint64)"
                        }
                      },
                      "id": 1603,
                      "indexExpression": {
                        "id": 1602,
                        "name": "NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "4815:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4780:39:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4774:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1605,
                  "nodeType": "ExpressionStatement",
                  "src": "4774:45:4"
                }
              ]
            },
            "documentation": {
              "id": 1576,
              "nodeType": "StructuredDocumentation",
              "src": "4195:334:4",
              "text": " @dev Balance holded by the user to see.\n @param campaigner Solidity address of the campaigner.\n @param tokenId Solidity address of the token.\n @param tokenType The type of the token (FUNGIBLE or NFT) [uint32] (1 for FUNGIBLE & 2 for NFT)\n                  1 for FUNGIBLE and 2 for NFT."
            },
            "functionSelector": "05346ac5",
            "id": 1607,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1585,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1584,
                  "name": "onlyOwnerOrCampaigner",
                  "nameLocations": [
                    "4664:21:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1043,
                  "src": "4664:21:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "4664:21:4"
              }
            ],
            "name": "getNFTTokenBalance",
            "nameLocation": "4544:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1578,
                  "mutability": "mutable",
                  "name": "campaigner",
                  "nameLocation": "4581:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "4573:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4573:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4610:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "4602:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4602:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1582,
                  "mutability": "mutable",
                  "name": "tokenType",
                  "nameLocation": "4635:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "4628:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1581,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4628:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4562:89:4"
            },
            "returnParameters": {
              "id": 1588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1587,
                  "mutability": "mutable",
                  "name": "res",
                  "nameLocation": "4702:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "4695:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4695:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4694:12:4"
            },
            "scope": 1623,
            "src": "4535:292:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1621,
              "nodeType": "Block",
              "src": "5152:59:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1617,
                      "name": "campaignBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "5170:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 1619,
                    "indexExpression": {
                      "id": 1618,
                      "name": "campaignAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1610,
                      "src": "5187:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5170:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1616,
                  "id": 1620,
                  "nodeType": "Return",
                  "src": "5163:40:4"
                }
              ]
            },
            "documentation": {
              "id": 1608,
              "nodeType": "StructuredDocumentation",
              "src": "4892:127:4",
              "text": " @dev Balance holded by the user to see.\n @param campaignAddress Solidity address of the campaigner."
            },
            "functionSelector": "4a3b1152",
            "id": 1622,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1613,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1612,
                  "name": "onlyOwnerOrCampaigner",
                  "nameLocations": [
                    "5112:21:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1043,
                  "src": "5112:21:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5112:21:4"
              }
            ],
            "name": "getCampaignBalance",
            "nameLocation": "5034:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1610,
                  "mutability": "mutable",
                  "name": "campaignAddress",
                  "nameLocation": "5077:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1622,
                  "src": "5063:29:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1609,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5063:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5052:47:4"
            },
            "returnParameters": {
              "id": 1616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1615,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1622,
                  "src": "5143:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5143:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5142:9:4"
            },
            "scope": 1623,
            "src": "5025:186:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1624,
        "src": "100:5114:4",
        "usedErrors": []
      }
    ],
    "src": "40:5176:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-10-27T16:41:45.385Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addCampaigner(address)": {
        "details": "Whitelist cmapigner to the user.",
        "params": {
          "newCampaigner": "Address of the user having campaigner role to be used here"
        }
      },
      "associateToken(address,uint32,bool)": {
        "details": "Adds or removes a token from the whitelist.",
        "params": {
          "isWhitelisted": "Boolean flag to mark the token as whitelisted or not.",
          "tokenAddress": "The address of the token.",
          "tokenType": "The type of the token (1 for FUNGIBLE, 2 for NFT)."
        }
      },
      "getAllWhitelistedTokens(uint32)": {
        "details": "Retrieves all whitelisted addresses for a given token type.",
        "params": {
          "tokenType": "The type of the token (1 for FUNGIBLE, 2 for NFT)."
        },
        "returns": {
          "_0": "An array of addresses that are whitelisted for the given token type."
        }
      },
      "getCampaignBalance(string)": {
        "details": "Balance holded by the user to see.",
        "params": {
          "campaignAddress": "Solidity address of the campaigner."
        }
      },
      "getFungibleTokenBalance(address,address,uint32)": {
        "params": {
          "campaigner": "Address of the campaigner'solidity address",
          "tokenId": "Solidity address used for the account",
          "tokenType": "The type of the token (FUNGIBLE or NFT) [uint32] (1 for FUNGIBLE & 2 for NFT)"
        }
      },
      "getNFTTokenBalance(address,address,uint32)": {
        "details": "Balance holded by the user to see.",
        "params": {
          "campaigner": "Solidity address of the campaigner.",
          "tokenId": "Solidity address of the token.",
          "tokenType": "The type of the token (FUNGIBLE or NFT) [uint32] (1 for FUNGIBLE & 2 for NFT)                  1 for FUNGIBLE and 2 for NFT."
        }
      },
      "isTokenWhitelisted(uint32,address)": {
        "details": "Checks if a specific token address is whitelisted for a given token type.",
        "params": {
          "tokenAddress": "The address of the token to check.",
          "tokenType": "The type of the token (1 for FUNGIBLE, 2 for NFT)."
        },
        "returns": {
          "_0": "Boolean flag indicating if the token is whitelisted."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
{
  "contractName": "Utils",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updatedBalance",
          "type": "uint256"
        }
      ],
      "name": "BalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "tokenType",
          "type": "uint32"
        }
      ],
      "name": "CampaignToppedUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        }
      ],
      "name": "CampaignerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        }
      ],
      "name": "CampaignerDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "CreatedToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updatedBalance",
          "type": "uint256"
        }
      ],
      "name": "FungibleTokenBalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FungibleTokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "interactor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InteractorPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InteractorPaidDeferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAdddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "campaignType",
          "type": "uint32"
        }
      ],
      "name": "NewCampaignIsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "responseCode",
          "type": "int256"
        }
      ],
      "name": "ResponseCode",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "remainingBalance",
          "type": "uint256"
        }
      ],
      "name": "RewardsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "campaignType",
          "type": "uint32"
        }
      ],
      "name": "campaignClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "campaignType",
          "type": "uint32"
        }
      ],
      "name": "campaignExpired",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FUNGIBLE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HBAR",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NFT",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "campaignBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "campaignRandomNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "campaigners",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nftCampaigner",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "tokenCampaignBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "name": "associateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllWhitelistedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "isTokenWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCampaigner",
          "type": "address"
        }
      ],
      "name": "addCampaigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenId",
          "type": "address"
        }
      ],
      "name": "getFungibleTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "res",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "campaigner",
          "type": "address"
        }
      ],
      "name": "getHbarBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "res",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "campaignAddress",
          "type": "string"
        }
      ],
      "name": "getCampaignBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"tokenType\",\"type\":\"uint32\"}],\"name\":\"CampaignToppedUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"}],\"name\":\"CampaignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"}],\"name\":\"CampaignerDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"CreatedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedBalance\",\"type\":\"uint256\"}],\"name\":\"FungibleTokenBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FungibleTokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"interactor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InteractorPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InteractorPaidDeferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAdddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"campaignType\",\"type\":\"uint32\"}],\"name\":\"NewCampaignIsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"responseCode\",\"type\":\"int256\"}],\"name\":\"ResponseCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingBalance\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"campaignType\",\"type\":\"uint32\"}],\"name\":\"campaignClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"campaignType\",\"type\":\"uint32\"}],\"name\":\"campaignExpired\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FUNGIBLE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HBAR\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCampaigner\",\"type\":\"address\"}],\"name\":\"addCampaigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"associateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"campaignBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"campaignRandomNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"campaigners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllWhitelistedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"campaignAddress\",\"type\":\"string\"}],\"name\":\"getCampaignBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"}],\"name\":\"getFungibleTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"res\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaigner\",\"type\":\"address\"}],\"name\":\"getHbarBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"res\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"isTokenWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nftCampaigner\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"tokenCampaignBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Om Prakash\",\"details\":\"This contract is used to store the state of the Hashbuzz contract\",\"kind\":\"dev\",\"methods\":{\"addCampaigner(address)\":{\"details\":\"Whitelist cmapigner to the user.\",\"params\":{\"newCampaigner\":\"Address of the user having campaigner role to be used here\"}},\"associateToken(address,bool)\":{\"details\":\"Adds or removes a token from the whitelist.\",\"params\":{\"isWhitelisted\":\"Boolean flag to mark the token as whitelisted or not.\",\"tokenAddress\":\"The address of the token.\"}},\"getAllWhitelistedTokens()\":{\"details\":\"Retrieves all whitelisted addresses for a given token type.\",\"returns\":{\"_0\":\"An array of addresses that are whitelisted for the given token type.\"}},\"getCampaignBalance(string)\":{\"details\":\"Balance held by the user to see.\",\"params\":{\"campaignAddress\":\"Solidity address of the campaigner.\"}},\"getFungibleTokenBalance(address,address)\":{\"details\":\"Retrieves the balance of a fungible token for a specific campaigner.\",\"params\":{\"campaigner\":\"Address of the campaigner's solidity address.\",\"tokenId\":\"Solidity address used for the account.\"},\"returns\":{\"res\":\"The balance of the fungible token.\"}},\"getHbarBalance(address)\":{\"details\":\"Balance holded by the user to see.\",\"params\":{\"campaigner\":\"Solidity address of the campaigner.\"}},\"isTokenWhitelisted(address)\":{\"details\":\"Checks if a specific token address is whitelisted for a given token type.\",\"params\":{\"tokenAddress\":\"The address of the token to check.\"},\"returns\":{\"_0\":\"Boolean flag indicating if the token is whitelisted.\"}}},\"title\":\"Utils\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Deals with operations related to transactions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HashbuzzModules/Utils.sol\":\"Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/HashbuzzModules/HashbuzzStates.sol\":{\"keccak256\":\"0xdbcbd10faf3102396a6ea0565e090138541c32aaf29b599cf4a066e08f0f8bbc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1c9cec11c6c481ccc64dbcd59a12fc0044b5685d862a3ed12e5319c668bc4714\",\"dweb:/ipfs/QmeoPb1vrV57tUDa3AjcQzzc7AU6cQzQBNPFWWVCiPe7MW\"]},\"project:/contracts/HashbuzzModules/Utils.sol\":{\"keccak256\":\"0xad58e6c2b5cbaf9ad46bccf77eea0021c943b07181c04dca892dac4d87a76b92\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f4f9e3a71deca301b73d01ea74104b3a9c4f468fa0a1fbf2f683ed4c0b2e67fa\",\"dweb:/ipfs/QmQfxMm5hq82pjQ4uMJnbGza6d8GKyQzS1xRvRMzNRBUJi\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610e40806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063694be7e0116100ad5780639a5f0da6116100715780639a5f0da6146102e7578063b5af090f14610328578063bc3ef1e91461033b578063bff3199614610361578063cfe3f9a81461037457600080fd5b8063694be7e014610266578063774256c7146102975780637c0b8de21461029f5780638da5cb5b146102a75780639991033c146102d257600080fd5b806327e235e3116100f457806327e235e3146101bd578063362e34b9146101dd5780634377e3ff1461020b5780634a3b1152146102285780634f18230d1461023b57600080fd5b80631102934514610126578063160f9c881461015e57806316d343e01461017f5780631b0f32a3146101a8575b600080fd5b610149610134366004610a16565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61017161016c366004610a38565b6103a5565b604051908152602001610155565b61017161018d366004610a16565b6001600160a01b031660009081526002602052604090205490565b6101bb6101b6366004610a6b565b6104b1565b005b6101716101cb366004610a16565b60026020526000908152604090205481565b6101496101eb366004610abb565b600360209081526000928352604080842090915290825290205460ff1681565b610213600181565b60405163ffffffff9091168152602001610155565b610171610236366004610b7a565b6107c5565b610171610249366004610b7a565b805160208183018101805160068252928201919093012091525481565b610171610274366004610bb7565b600560209081526000938452604080852082529284528284209052825290205481565b610213600081565b610213600281565b6000546102ba906001600160a01b031681565b6040516001600160a01b039091168152602001610155565b6102da61082d565b6040516101559190610bfa565b6101716102f5366004610c47565b82516020818501810180516007825292820195820195909520919094528352600091825260408083209093528152205481565b610149610336366004610a16565b6108a5565b610213610349366004610a16565b60096020526000908152604090205463ffffffff1681565b6101bb61036f366004610a16565b6108d0565b610213610382366004610b7a565b8051602081830181018051600b8252928201919093012091525463ffffffff1681565b6040805180820190915260048152634530303160e01b60208201526000906001600160a01b0383166103f35760405162461bcd60e51b81526004016103ea9190610cb2565b60405180910390fd5b506040805180820190915260048152632298181960e11b60208201526001600160a01b0384166104365760405162461bcd60e51b81526004016103ea9190610cb2565b50610440826108a5565b604051806040016040528060048152602001634530303560e01b8152509061047b5760405162461bcd60e51b81526004016103ea9190610cb2565b50506001600160a01b03918216600090815260056020908152604080832093909416825291825282812060018252909152205490565b6000546001600160a01b031633146104db5760405162461bcd60e51b81526004016103ea90610ce5565b6040805180820190915260048152634530303160e01b60208201526001600160a01b03831661051d5760405162461bcd60e51b81526004016103ea9190610cb2565b5080801561055157506001600160a01b0382166000908152600080516020610deb833981519152602052604090205460ff16155b156105de57506001600160a01b03166000818152600080516020610deb833981519152602090815260408220805460ff191660019081179091556004909152600080516020610dcb833981519152805491820181559091527f210afe6ebef982fa193bb4e17f9f236cdf09af7788627b5d54d9e3e4b100021b0180546001600160a01b0319169091179055565b8015801561061157506001600160a01b0382166000908152600080516020610deb833981519152602052604090205460ff165b156107c1576001600160a01b0382166000908152600080516020610deb833981519152602090815260408220805460ff191690556001825260049052600080516020610dcb83398151915254905b818110156107be5760016000526004602052600080516020610dcb83398151915280546001600160a01b03861691908390811061069e5761069e610d3a565b6000918252602090912001546001600160a01b0316036107ac57600160008190526004602052600080516020610dcb833981519152906106de9084610d66565b815481106106ee576106ee610d3a565b6000918252602080832090910154600190925260049052600080516020610dcb83398151915280546001600160a01b03909216918390811061073257610732610d3a565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394909416939093179092556001905260049052600080516020610dcb83398151915280548061078557610785610d7f565b600082815260209020810160001990810180546001600160a01b03191690550190556107be565b806107b681610d95565b91505061065f565b50505b5050565b600080825111604051806040016040528060048152602001632298181960e11b815250906108065760405162461bcd60e51b81526004016103ea9190610cb2565b506006826040516108179190610dae565b9081526020016040518091039020549050919050565b600160005260046020908152600080516020610dcb833981519152805460408051828502810185019091528181526060939092919083018282801561089b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161087d575b5050505050905090565b6001600160a01b03166000908152600080516020610deb833981519152602052604090205460ff1690565b6000546001600160a01b031633146108fa5760405162461bcd60e51b81526004016103ea90610ce5565b6040805180820190915260048152632298181960e11b60208201526001600160a01b03821661093c5760405162461bcd60e51b81526004016103ea9190610cb2565b506001600160a01b03811660009081526001602052604090205460ff1615604051806040016040528060048152602001632298181b60e11b815250906109955760405162461bcd60e51b81526004016103ea9190610cb2565b506001600160a01b0381166000818152600160208181526040808420805460ff19169093179092556002815281832092909255519182527f3d04fb94919fdfa7708320cdebdf093992d88d792b3d5f4144c364cda00129c6910160405180910390a150565b80356001600160a01b0381168114610a1157600080fd5b919050565b600060208284031215610a2857600080fd5b610a31826109fa565b9392505050565b60008060408385031215610a4b57600080fd5b610a54836109fa565b9150610a62602084016109fa565b90509250929050565b60008060408385031215610a7e57600080fd5b610a87836109fa565b915060208301358015158114610a9c57600080fd5b809150509250929050565b803563ffffffff81168114610a1157600080fd5b60008060408385031215610ace57600080fd5b610a5483610aa7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610afe57600080fd5b813567ffffffffffffffff80821115610b1957610b19610ad7565b604051601f8301601f19908116603f01168101908282118183101715610b4157610b41610ad7565b81604052838152866020858801011115610b5a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610b8c57600080fd5b813567ffffffffffffffff811115610ba357600080fd5b610baf84828501610aed565b949350505050565b600080600060608486031215610bcc57600080fd5b610bd5846109fa565b9250610be3602085016109fa565b9150610bf160408501610aa7565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015610c3b5783516001600160a01b031683529284019291840191600101610c16565b50909695505050505050565b600080600060608486031215610c5c57600080fd5b833567ffffffffffffffff811115610c7357600080fd5b610c7f86828701610aed565b935050610be3602085016109fa565b60005b83811015610ca9578181015183820152602001610c91565b50506000910152565b6020815260008251806020840152610cd1816040850160208701610c8e565b601f01601f19169190910160400192915050565b60208082526035908201527f556e617574686f72697a6520416363657373207265717565737465642c204361604082015274363632b91034b9903737ba103a34329037bbb732b960591b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610d7957610d79610d50565b92915050565b634e487b7160e01b600052603160045260246000fd5b600060018201610da757610da7610d50565b5060010190565b60008251610dc0818460208701610c8e565b919091019291505056feabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05a15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054ca2646970667358221220773f83166d0b8d76df37176ea18cad6865d8b575460da6570746a19ead0fd26c64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063694be7e0116100ad5780639a5f0da6116100715780639a5f0da6146102e7578063b5af090f14610328578063bc3ef1e91461033b578063bff3199614610361578063cfe3f9a81461037457600080fd5b8063694be7e014610266578063774256c7146102975780637c0b8de21461029f5780638da5cb5b146102a75780639991033c146102d257600080fd5b806327e235e3116100f457806327e235e3146101bd578063362e34b9146101dd5780634377e3ff1461020b5780634a3b1152146102285780634f18230d1461023b57600080fd5b80631102934514610126578063160f9c881461015e57806316d343e01461017f5780631b0f32a3146101a8575b600080fd5b610149610134366004610a16565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61017161016c366004610a38565b6103a5565b604051908152602001610155565b61017161018d366004610a16565b6001600160a01b031660009081526002602052604090205490565b6101bb6101b6366004610a6b565b6104b1565b005b6101716101cb366004610a16565b60026020526000908152604090205481565b6101496101eb366004610abb565b600360209081526000928352604080842090915290825290205460ff1681565b610213600181565b60405163ffffffff9091168152602001610155565b610171610236366004610b7a565b6107c5565b610171610249366004610b7a565b805160208183018101805160068252928201919093012091525481565b610171610274366004610bb7565b600560209081526000938452604080852082529284528284209052825290205481565b610213600081565b610213600281565b6000546102ba906001600160a01b031681565b6040516001600160a01b039091168152602001610155565b6102da61082d565b6040516101559190610bfa565b6101716102f5366004610c47565b82516020818501810180516007825292820195820195909520919094528352600091825260408083209093528152205481565b610149610336366004610a16565b6108a5565b610213610349366004610a16565b60096020526000908152604090205463ffffffff1681565b6101bb61036f366004610a16565b6108d0565b610213610382366004610b7a565b8051602081830181018051600b8252928201919093012091525463ffffffff1681565b6040805180820190915260048152634530303160e01b60208201526000906001600160a01b0383166103f35760405162461bcd60e51b81526004016103ea9190610cb2565b60405180910390fd5b506040805180820190915260048152632298181960e11b60208201526001600160a01b0384166104365760405162461bcd60e51b81526004016103ea9190610cb2565b50610440826108a5565b604051806040016040528060048152602001634530303560e01b8152509061047b5760405162461bcd60e51b81526004016103ea9190610cb2565b50506001600160a01b03918216600090815260056020908152604080832093909416825291825282812060018252909152205490565b6000546001600160a01b031633146104db5760405162461bcd60e51b81526004016103ea90610ce5565b6040805180820190915260048152634530303160e01b60208201526001600160a01b03831661051d5760405162461bcd60e51b81526004016103ea9190610cb2565b5080801561055157506001600160a01b0382166000908152600080516020610deb833981519152602052604090205460ff16155b156105de57506001600160a01b03166000818152600080516020610deb833981519152602090815260408220805460ff191660019081179091556004909152600080516020610dcb833981519152805491820181559091527f210afe6ebef982fa193bb4e17f9f236cdf09af7788627b5d54d9e3e4b100021b0180546001600160a01b0319169091179055565b8015801561061157506001600160a01b0382166000908152600080516020610deb833981519152602052604090205460ff165b156107c1576001600160a01b0382166000908152600080516020610deb833981519152602090815260408220805460ff191690556001825260049052600080516020610dcb83398151915254905b818110156107be5760016000526004602052600080516020610dcb83398151915280546001600160a01b03861691908390811061069e5761069e610d3a565b6000918252602090912001546001600160a01b0316036107ac57600160008190526004602052600080516020610dcb833981519152906106de9084610d66565b815481106106ee576106ee610d3a565b6000918252602080832090910154600190925260049052600080516020610dcb83398151915280546001600160a01b03909216918390811061073257610732610d3a565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394909416939093179092556001905260049052600080516020610dcb83398151915280548061078557610785610d7f565b600082815260209020810160001990810180546001600160a01b03191690550190556107be565b806107b681610d95565b91505061065f565b50505b5050565b600080825111604051806040016040528060048152602001632298181960e11b815250906108065760405162461bcd60e51b81526004016103ea9190610cb2565b506006826040516108179190610dae565b9081526020016040518091039020549050919050565b600160005260046020908152600080516020610dcb833981519152805460408051828502810185019091528181526060939092919083018282801561089b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161087d575b5050505050905090565b6001600160a01b03166000908152600080516020610deb833981519152602052604090205460ff1690565b6000546001600160a01b031633146108fa5760405162461bcd60e51b81526004016103ea90610ce5565b6040805180820190915260048152632298181960e11b60208201526001600160a01b03821661093c5760405162461bcd60e51b81526004016103ea9190610cb2565b506001600160a01b03811660009081526001602052604090205460ff1615604051806040016040528060048152602001632298181b60e11b815250906109955760405162461bcd60e51b81526004016103ea9190610cb2565b506001600160a01b0381166000818152600160208181526040808420805460ff19169093179092556002815281832092909255519182527f3d04fb94919fdfa7708320cdebdf093992d88d792b3d5f4144c364cda00129c6910160405180910390a150565b80356001600160a01b0381168114610a1157600080fd5b919050565b600060208284031215610a2857600080fd5b610a31826109fa565b9392505050565b60008060408385031215610a4b57600080fd5b610a54836109fa565b9150610a62602084016109fa565b90509250929050565b60008060408385031215610a7e57600080fd5b610a87836109fa565b915060208301358015158114610a9c57600080fd5b809150509250929050565b803563ffffffff81168114610a1157600080fd5b60008060408385031215610ace57600080fd5b610a5483610aa7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610afe57600080fd5b813567ffffffffffffffff80821115610b1957610b19610ad7565b604051601f8301601f19908116603f01168101908282118183101715610b4157610b41610ad7565b81604052838152866020858801011115610b5a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610b8c57600080fd5b813567ffffffffffffffff811115610ba357600080fd5b610baf84828501610aed565b949350505050565b600080600060608486031215610bcc57600080fd5b610bd5846109fa565b9250610be3602085016109fa565b9150610bf160408501610aa7565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015610c3b5783516001600160a01b031683529284019291840191600101610c16565b50909695505050505050565b600080600060608486031215610c5c57600080fd5b833567ffffffffffffffff811115610c7357600080fd5b610c7f86828701610aed565b935050610be3602085016109fa565b60005b83811015610ca9578181015183820152602001610c91565b50506000910152565b6020815260008251806020840152610cd1816040850160208701610c8e565b601f01601f19169190910160400192915050565b60208082526035908201527f556e617574686f72697a6520416363657373207265717565737465642c204361604082015274363632b91034b9903737ba103a34329037bbb732b960591b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610d7957610d79610d50565b92915050565b634e487b7160e01b600052603160045260246000fd5b600060018201610da757610da7610d50565b5060010190565b60008251610dc0818460208701610c8e565b919091019291505056feabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05a15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054ca2646970667358221220773f83166d0b8d76df37176ea18cad6865d8b575460da6570746a19ead0fd26c64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6904:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:6"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "14:173:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:6",
                "type": ""
              }
            ],
            "src": "192:186:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "478:92:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "488:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "496:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "496:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "488:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "530:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "555:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "548:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "548:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "541:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "541:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:41:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "447:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "458:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "469:4:6",
                "type": ""
              }
            ],
            "src": "383:187:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "662:173:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "708:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "717:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "720:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "710:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "710:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "710:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "683:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "692:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "679:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "679:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "704:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "675:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "675:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "672:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "733:39:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "762:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "743:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:29:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "733:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "781:48:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "814:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "825:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "810:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "810:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "791:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "791:38:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "781:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "620:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "631:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "643:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "651:6:6",
                "type": ""
              }
            ],
            "src": "575:260:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "941:76:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "951:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "963:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "974:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "959:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "951:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "993:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1004:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "986:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "986:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "921:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "932:4:6",
                "type": ""
              }
            ],
            "src": "840:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1106:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1152:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1161:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1164:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1154:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1154:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1154:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1127:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1136:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1123:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1123:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1148:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1119:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1119:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1116:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1177:39:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1206:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1187:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1187:29:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1177:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1225:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1266:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1238:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1238:32:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1229:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1323:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1332:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1335:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1325:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1325:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1325:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1292:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1313:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1306:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1306:13:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1299:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1299:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1289:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1289:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1282:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1282:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1279:60:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1348:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1358:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1348:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1064:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1075:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1087:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1095:6:6",
                "type": ""
              }
            ],
            "src": "1022:347:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:115:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1454:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1441:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1441:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1432:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1515:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1524:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1527:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1517:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1517:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1517:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1483:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1494:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1501:10:6",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1490:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1490:22:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1480:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1480:33:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1473:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:41:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1470:61:6"
                }
              ]
            },
            "name": "abi_decode_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1401:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1412:5:6",
                "type": ""
              }
            ],
            "src": "1374:163:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1628:172:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1674:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1683:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1686:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1676:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1676:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1676:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1649:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1658:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1645:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1645:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1670:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1641:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1641:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1638:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1699:38:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1727:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "1709:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1709:28:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1699:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1746:48:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1779:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1790:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1775:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1775:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1756:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1756:38:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1746:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1586:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1597:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1609:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1617:6:6",
                "type": ""
              }
            ],
            "src": "1542:258:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1904:93:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1914:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1926:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1937:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1922:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1914:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1956:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1971:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1979:10:6",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1967:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1949:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:42:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1949:42:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1873:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1884:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1895:4:6",
                "type": ""
              }
            ],
            "src": "1805:192:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2034:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2051:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2058:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2063:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2054:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2054:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2044:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2044:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2044:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2091:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2094:4:6",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2084:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2084:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2084:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2115:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2108:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2108:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2108:15:6"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2002:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2187:666:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2236:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2245:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2248:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2238:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2238:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2238:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2215:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2223:4:6",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2211:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2211:17:6"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2230:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2207:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2207:27:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2200:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2200:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2197:55:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2261:30:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2284:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2271:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2271:20:6"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2265:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2300:28:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2310:18:6",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2304:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2351:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2353:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2353:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2353:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2343:2:6"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2347:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2340:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:10:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2337:36:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2382:17:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2396:2:6",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2392:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2392:7:6"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2386:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2408:23:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2428:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2422:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:9:6"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2412:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2440:71:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2462:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2486:2:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2490:4:6",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2482:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2482:13:6"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2497:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2478:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2478:22:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2502:2:6",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2474:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2474:31:6"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2507:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2470:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2470:40:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2458:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2458:53:6"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2444:10:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2570:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2572:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2572:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2572:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2529:10:6"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2541:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2526:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2526:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2549:10:6"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2561:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2546:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2546:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2523:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2523:46:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2520:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2608:2:6",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2612:10:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2601:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2601:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2601:22:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2639:6:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2647:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2632:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2632:18:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2632:18:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2698:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2707:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2710:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2700:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2700:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2700:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2673:6:6"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2681:2:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2669:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2669:15:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2686:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2665:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2665:26:6"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2693:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2662:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2662:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2659:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2740:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2748:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2736:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2736:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2759:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2767:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2755:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2755:17:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2774:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2723:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2723:54:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2723:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2801:6:6"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2809:2:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2797:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2797:15:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2814:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2793:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2793:26:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2821:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2786:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2786:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2786:37:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2832:15:6",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2841:6:6"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2832:5:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2161:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2169:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2177:5:6",
                "type": ""
              }
            ],
            "src": "2134:719:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2938:242:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2984:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2993:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2996:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2986:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2986:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2986:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2959:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2968:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2955:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2955:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2980:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2951:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2951:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2948:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3009:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3036:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3023:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3023:23:6"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3013:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3089:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3098:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3101:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3091:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3091:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3091:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3061:6:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3069:18:6",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3058:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3058:30:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3055:50:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3114:60:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3146:9:6"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3157:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3142:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3142:22:6"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3166:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3124:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3124:50:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3114:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2904:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2915:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2927:6:6",
                "type": ""
              }
            ],
            "src": "2858:322:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3288:229:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3334:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3343:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3346:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3336:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3336:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3336:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3309:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3318:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3305:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3305:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3330:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3301:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3301:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3298:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3359:39:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3388:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3369:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3369:29:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3359:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3407:48:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3440:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3451:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3436:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3436:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3417:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3417:38:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3407:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3464:47:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3496:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3507:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3492:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3492:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "3474:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3474:37:6"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3464:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3238:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3249:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3261:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3269:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3277:6:6",
                "type": ""
              }
            ],
            "src": "3185:332:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3623:102:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3633:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3645:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3656:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3641:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3633:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3675:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3690:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3706:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3711:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3702:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3702:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3715:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3698:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3698:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3686:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3686:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3668:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3668:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3668:51:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3592:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3603:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3614:4:6",
                "type": ""
              }
            ],
            "src": "3522:203:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3881:507:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3891:12:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3901:2:6",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3895:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3912:32:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3930:9:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3941:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3926:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3926:18:6"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "3916:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3960:9:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3971:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3953:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3953:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3953:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3983:17:6",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "3994:6:6"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "3987:3:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4009:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4029:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4023:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4023:13:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4013:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4052:6:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4060:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4045:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4045:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4045:22:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4076:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4087:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4098:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4083:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4083:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4076:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4110:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4128:6:6"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4136:2:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4124:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4124:15:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4114:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4148:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4157:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4152:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4216:146:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4237:3:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4252:6:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4246:5:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4246:13:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4269:3:6",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4274:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "4265:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4265:11:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4278:1:6",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "4261:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4261:19:6"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4242:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4242:39:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4230:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4230:52:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4230:52:6"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4295:19:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4306:3:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4311:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4302:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4302:12:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4295:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4327:25:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4341:6:6"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4349:2:6"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4337:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4337:15:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4327:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4178:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4181:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4175:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4175:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4189:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4191:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4200:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4203:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4196:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4196:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4191:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4171:3:6",
                    "statements": []
                  },
                  "src": "4167:195:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4371:11:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4379:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4371:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3850:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3861:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3872:4:6",
                "type": ""
              }
            ],
            "src": "3730:658:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4506:355:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4552:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4561:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4564:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4554:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4554:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4554:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4527:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4536:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4523:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4523:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4548:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4519:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4519:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4516:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4577:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4604:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4591:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4591:23:6"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4581:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4657:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4666:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4669:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4659:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4659:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4659:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4629:6:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4637:18:6",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4626:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4626:30:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4623:50:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4682:60:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4714:9:6"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4725:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4710:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4710:22:6"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4734:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4692:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4692:50:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4682:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4751:48:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4784:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4795:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4780:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4780:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4761:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4761:38:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4751:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4808:47:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4840:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4851:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4836:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4836:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "4818:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4818:37:6"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4808:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_addresst_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4456:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4467:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4479:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4487:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4495:6:6",
                "type": ""
              }
            ],
            "src": "4393:468:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4932:184:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4942:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4951:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4946:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5011:63:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5036:3:6"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5041:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5032:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5032:11:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5055:3:6"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5060:1:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5051:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5051:11:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5045:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5045:18:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5025:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5025:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5025:39:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4972:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4975:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4969:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4969:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4983:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4985:15:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4994:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4997:2:6",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4990:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4990:10:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4985:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4965:3:6",
                    "statements": []
                  },
                  "src": "4961:113:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "5094:3:6"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5099:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5090:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5090:16:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5108:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5083:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5083:27:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5083:27:6"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4910:3:6",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4915:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4920:6:6",
                "type": ""
              }
            ],
            "src": "4866:250:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5242:275:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5259:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5270:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5252:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5252:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5252:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5282:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5302:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5296:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5296:13:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5286:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5329:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5340:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5325:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5325:18:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5345:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5318:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5318:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5318:34:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5400:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5408:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5396:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5396:15:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5417:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5428:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5413:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5413:18:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5433:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "5361:34:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5361:79:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5361:79:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5449:62:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5465:9:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5484:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5492:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5480:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5480:15:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5501:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5497:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5497:7:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5476:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5476:29:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5461:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5461:45:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5508:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5457:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5457:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5449:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5211:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5222:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5233:4:6",
                "type": ""
              }
            ],
            "src": "5121:396:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5696:243:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5713:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5724:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5706:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5706:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5706:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5747:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5758:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5743:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5743:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5763:2:6",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5736:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5736:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5786:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5797:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5782:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5782:18:6"
                      },
                      {
                        "hexValue": "556e617574686f72697a6520416363657373207265717565737465642c204361",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5802:34:6",
                        "type": "",
                        "value": "Unauthorize Access requested, Ca"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5775:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5775:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5775:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5857:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5868:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5853:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5853:18:6"
                      },
                      {
                        "hexValue": "6c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5873:23:6",
                        "type": "",
                        "value": "ller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5846:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5846:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5846:51:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5906:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5918:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5929:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5914:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5914:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5906:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2c23b1f872e371dbbdac103ac32e54922af5e24d43b905593ec8c18621b689b1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5673:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5687:4:6",
                "type": ""
              }
            ],
            "src": "5522:417:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5976:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5993:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6000:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6005:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5996:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5996:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5986:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5986:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5986:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6033:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6036:4:6",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6026:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6026:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6026:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6057:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6060:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6050:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6050:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6050:15:6"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5944:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6108:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6125:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6132:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6137:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6128:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6128:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6118:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6118:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6118:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6165:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6168:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6158:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6158:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6158:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6189:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6192:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6182:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6182:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6182:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6076:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6257:79:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6267:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6279:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6282:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6275:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6275:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6267:4:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6308:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6310:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6310:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6310:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "6299:4:6"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6305:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6296:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6296:11:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6293:37:6"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6239:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6242:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6248:4:6",
                "type": ""
              }
            ],
            "src": "6208:128:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6373:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6390:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6397:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6402:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6393:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6393:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6383:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6383:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6383:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6430:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6433:4:6",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6423:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6423:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6423:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6454:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6457:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6447:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6447:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6447:15:6"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "6341:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6520:88:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6551:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6553:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6553:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6553:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6536:5:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6547:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6543:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6543:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6533:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6533:17:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6530:43:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6582:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6593:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6600:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6589:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6589:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6582:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6502:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6512:3:6",
                "type": ""
              }
            ],
            "src": "6473:135:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6752:150:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6762:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6782:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6776:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6776:13:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6766:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6837:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6845:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6833:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6833:17:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6852:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6857:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "6798:34:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6798:66:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6798:66:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6873:23:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6884:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6889:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6880:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6880:16:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6873:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6728:3:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6733:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6744:3:6",
                "type": ""
              }
            ],
            "src": "6613:289:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_uint32(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_uint32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_uint32(add(headStart, 64))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_2c23b1f872e371dbbdac103ac32e54922af5e24d43b905593ec8c18621b689b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Unauthorize Access requested, Ca\")\n        mstore(add(headStart, 96), \"ller is not the owner\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "286:4188:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "286:4188:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;358:43:1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;548:14:6;;541:22;523:41;;511:2;496:18;358:43:1;;;;;;;;3300:414:3;;;;;;:::i;:::-;;:::i;:::-;;;986:25:6;;;974:2;959:18;3300:414:3;840:177:6;3850:140:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3962:20:3;3932:11;3962:20;;;:8;:20;;;;;;;3850:140;538:1229;;;;;;:::i;:::-;;:::i;:::-;;408:43:1;;;;;;:::i;:::-;;;;;;;;;;;;;;460:67;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;277:35;;311:1;277:35;;;;;1979:10:6;1967:23;;;1949:42;;1937:2;1922:18;277:35:1;1805:192:6;4187:284:3;;;;;;:::i;:::-;;:::i;711:50:1:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;606:96;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;239:31;;269:1;239:31;;319:30;;348:1;319:30;;210:20;;;;;-1:-1:-1;;;;;210:20:1;;;;;;-1:-1:-1;;;;;3686:32:6;;;3668:51;;3656:2;3641:18;210:20:1;3522:203:6;1951:135:3;;;:::i;:::-;;;;;;;:::i;768:103:1:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;768:103:1;;;;;;;;;;;;;;;;2331:159:3;;;;;;:::i;:::-;;:::i;949:47:1:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2650:353:3;;;;;;:::i;:::-;;:::i;1070:53:1:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3300:414:3;3471:25;;;;;;;;;;;;-1:-1:-1;;;3471:25:3;;;;3416:11;;-1:-1:-1;;;;;3448:21:3;;3440:57;;;;-1:-1:-1;;;3440:57:3;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;3542:28:3;;;;;;;;;;;;-1:-1:-1;;;3542:28:3;;;;-1:-1:-1;;;;;3516:24:3;;3508:63;;;;-1:-1:-1;;;3508:63:3;;;;;;;;:::i;:::-;;3590:27;3609:7;3590:18;:27::i;:::-;3619:25;;;;;;;;;;;;;-1:-1:-1;;;3619:25:3;;;3582:63;;;;;-1:-1:-1;;;3582:63:3;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;3662:25:3;;;;;;;:13;:25;;;;;;;;:34;;;;;;;;;;;;311:1:1;3662:44:3;;;;;;;;3300:414::o;538:1229::-;3580:5:1;;-1:-1:-1;;;;;3580:5:1;3566:10;:19;3544:122;;;;-1:-1:-1;;;3544:122:1;;;;;;;:::i;:::-;693:25:3::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;693:25:3::1;::::0;::::1;::::0;-1:-1:-1;;;;;665:26:3;::::1;657:62;;;;-1:-1:-1::0;;;657:62:3::1;;;;;;;;:::i;:::-;;734:13;:58;;;;-1:-1:-1::0;;;;;;752:40:3;::::1;:26;:40:::0;;;-1:-1:-1;;;;;;;;;;;752:26:3::1;:40:::0;:26;:40;;;::::1;;751:41;734:58;730:1030;;;-1:-1:-1::0;;;;;;869:40:3::1;:26;:40:::0;;;-1:-1:-1;;;;;;;;;;;869:26:3::1;:40:::0;;;:26;:40;;:47;;-1:-1:-1;;869:47:3::1;912:4;869:47:::0;;::::1;::::0;;;931:25:::1;:35:::0;;;-1:-1:-1;;;;;;;;;;;931:54:3;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;931:54:3::1;::::0;;::::1;::::0;;538:1229::o;730:1030::-:1;1008:13;1007:14;:58;;;;-1:-1:-1::0;;;;;;1025:40:3;::::1;:26;:40:::0;;;-1:-1:-1;;;;;;;;;;;1025:26:3::1;:40:::0;:26;:40;;;::::1;;1007:58;1003:757;;;-1:-1:-1::0;;;;;1145:40:3;::::1;1188:5;1145:40:::0;;;-1:-1:-1;;;;;;;;;;;1145:26:3::1;:40:::0;;;:26;:40;;:48;;-1:-1:-1;;1145:48:3::1;::::0;;311:1:1::1;1290:35:3::0;;:25:::1;:35:::0;;-1:-1:-1;;;;;;;;;;;1290:42:3;;1347:402:::1;1371:6;1367:1;:10;1347:402;;;311:1:1;1407:35:3;::::0;:25:::1;:35;::::0;-1:-1:-1;;;;;;;;;;;1407:38:3;;-1:-1:-1;;;;;1407:54:3;::::1;::::0;:35;1443:1;;1407:38;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;1407:38:3::1;:54:::0;1403:331:::1;;311:1:1;1575:35:3;::::0;;;:25:::1;:35;::::0;-1:-1:-1;;;;;;;;;;;1575:35:3;1611:10:::1;::::0;:6;:10:::1;:::i;:::-;1575:47;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;;1486:35;;;:25:::1;:35:::0;;-1:-1:-1;;;;;;;;;;;1486:86:3;;-1:-1:-1;;;;;1575:47:3;;::::1;::::0;1548:1;;1486:86;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:136:::0;;-1:-1:-1;;;;;;1486:136:3::1;-1:-1:-1::0;;;;;1486:136:3;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;1645:35:3;;:25:::1;:35:::0;;-1:-1:-1;;;;;;;;;;;1645:41:3;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;1645:41:3;;;;;-1:-1:-1;;;;;;1645:41:3::1;::::0;;;;;1709:5:::1;;1403:331;1379:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1347:402;;;;1067:693;1003:757;538:1229:::0;;:::o;4187:284::-;4283:7;4357:1;4331:15;4325:29;:33;4373:28;;;;;;;;;;;;;-1:-1:-1;;;4373:28:3;;;4303:109;;;;;-1:-1:-1;;;4303:109:3;;;;;;;;:::i;:::-;;4430:16;4447:15;4430:33;;;;;;:::i;:::-;;;;;;;;;;;;;;4423:40;;4187:284;;;:::o;1951:135::-;311:1:1;2043:35:3;;:25;:35;;;;-1:-1:-1;;;;;;;;;;;2036:42:3;;2043:35;2036:42;;;;;;;;;;;;;;;2007:16;;2036:42;;2043:35;2036:42;;;2043:35;2036:42;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2036:42:3;;;;;;;;;;;;;;;;;;;;;;;1951:135;:::o;2331:159::-;-1:-1:-1;;;;;2442:40:3;2418:4;2442:40;;;-1:-1:-1;;;;;;;;;;;2442:26:3;:40;:26;:40;;;;;;2331:159::o;2650:353::-;3580:5:1;;-1:-1:-1;;;;;3580:5:1;3566:10;:19;3544:122;;;;-1:-1:-1;;;3544:122:1;;;;;;;:::i;:::-;2761:28:3::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2761:28:3::1;::::0;::::1;::::0;-1:-1:-1;;;;;2732:27:3;::::1;2724:66;;;;-1:-1:-1::0;;;2724:66:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;4126:21:1;;4102:4;4126:21;;;:11;:21;;;;;;;;2809:28:3::1;2839:27;;;;;;;;;;;;;-1:-1:-1::0;;;2839:27:3::1;;::::0;2801:66:::1;;;;;-1:-1:-1::0;;;2801:66:3::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;2878:26:3;::::1;;::::0;;;2907:4:::1;2878:26;::::0;;;;;;;:33;;-1:-1:-1;;2878:33:3::1;::::0;;::::1;::::0;;;2922:8:::1;:23:::0;;;;;:27;;;;2965:30;3668:51:6;;;2965:30:3::1;::::0;3641:18:6;2965:30:3::1;;;;;;;2650:353:::0;:::o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:6:o;575:260::-;643:6;651;704:2;692:9;683:7;679:23;675:32;672:52;;;720:1;717;710:12;672:52;743:29;762:9;743:29;:::i;:::-;733:39;;791:38;825:2;814:9;810:18;791:38;:::i;:::-;781:48;;575:260;;;;;:::o;1022:347::-;1087:6;1095;1148:2;1136:9;1127:7;1123:23;1119:32;1116:52;;;1164:1;1161;1154:12;1116:52;1187:29;1206:9;1187:29;:::i;:::-;1177:39;;1266:2;1255:9;1251:18;1238:32;1313:5;1306:13;1299:21;1292:5;1289:32;1279:60;;1335:1;1332;1325:12;1279:60;1358:5;1348:15;;;1022:347;;;;;:::o;1374:163::-;1441:20;;1501:10;1490:22;;1480:33;;1470:61;;1527:1;1524;1517:12;1542:258;1609:6;1617;1670:2;1658:9;1649:7;1645:23;1641:32;1638:52;;;1686:1;1683;1676:12;1638:52;1709:28;1727:9;1709:28;:::i;2002:127::-;2063:10;2058:3;2054:20;2051:1;2044:31;2094:4;2091:1;2084:15;2118:4;2115:1;2108:15;2134:719;2177:5;2230:3;2223:4;2215:6;2211:17;2207:27;2197:55;;2248:1;2245;2238:12;2197:55;2284:6;2271:20;2310:18;2347:2;2343;2340:10;2337:36;;;2353:18;;:::i;:::-;2428:2;2422:9;2396:2;2482:13;;-1:-1:-1;;2478:22:6;;;2502:2;2474:31;2470:40;2458:53;;;2526:18;;;2546:22;;;2523:46;2520:72;;;2572:18;;:::i;:::-;2612:10;2608:2;2601:22;2647:2;2639:6;2632:18;2693:3;2686:4;2681:2;2673:6;2669:15;2665:26;2662:35;2659:55;;;2710:1;2707;2700:12;2659:55;2774:2;2767:4;2759:6;2755:17;2748:4;2740:6;2736:17;2723:54;2821:1;2814:4;2809:2;2801:6;2797:15;2793:26;2786:37;2841:6;2832:15;;;;;;2134:719;;;;:::o;2858:322::-;2927:6;2980:2;2968:9;2959:7;2955:23;2951:32;2948:52;;;2996:1;2993;2986:12;2948:52;3036:9;3023:23;3069:18;3061:6;3058:30;3055:50;;;3101:1;3098;3091:12;3055:50;3124;3166:7;3157:6;3146:9;3142:22;3124:50;:::i;:::-;3114:60;2858:322;-1:-1:-1;;;;2858:322:6:o;3185:332::-;3261:6;3269;3277;3330:2;3318:9;3309:7;3305:23;3301:32;3298:52;;;3346:1;3343;3336:12;3298:52;3369:29;3388:9;3369:29;:::i;:::-;3359:39;;3417:38;3451:2;3440:9;3436:18;3417:38;:::i;:::-;3407:48;;3474:37;3507:2;3496:9;3492:18;3474:37;:::i;:::-;3464:47;;3185:332;;;;;:::o;3730:658::-;3901:2;3953:21;;;4023:13;;3926:18;;;4045:22;;;3872:4;;3901:2;4124:15;;;;4098:2;4083:18;;;3872:4;4167:195;4181:6;4178:1;4175:13;4167:195;;;4246:13;;-1:-1:-1;;;;;4242:39:6;4230:52;;4337:15;;;;4302:12;;;;4278:1;4196:9;4167:195;;;-1:-1:-1;4379:3:6;;3730:658;-1:-1:-1;;;;;;3730:658:6:o;4393:468::-;4479:6;4487;4495;4548:2;4536:9;4527:7;4523:23;4519:32;4516:52;;;4564:1;4561;4554:12;4516:52;4604:9;4591:23;4637:18;4629:6;4626:30;4623:50;;;4669:1;4666;4659:12;4623:50;4692;4734:7;4725:6;4714:9;4710:22;4692:50;:::i;:::-;4682:60;;;4761:38;4795:2;4784:9;4780:18;4761:38;:::i;4866:250::-;4951:1;4961:113;4975:6;4972:1;4969:13;4961:113;;;5051:11;;;5045:18;5032:11;;;5025:39;4997:2;4990:10;4961:113;;;-1:-1:-1;;5108:1:6;5090:16;;5083:27;4866:250::o;5121:396::-;5270:2;5259:9;5252:21;5233:4;5302:6;5296:13;5345:6;5340:2;5329:9;5325:18;5318:34;5361:79;5433:6;5428:2;5417:9;5413:18;5408:2;5400:6;5396:15;5361:79;:::i;:::-;5501:2;5480:15;-1:-1:-1;;5476:29:6;5461:45;;;;5508:2;5457:54;;5121:396;-1:-1:-1;;5121:396:6:o;5522:417::-;5724:2;5706:21;;;5763:2;5743:18;;;5736:30;5802:34;5797:2;5782:18;;5775:62;-1:-1:-1;;;5868:2:6;5853:18;;5846:51;5929:3;5914:19;;5522:417::o;5944:127::-;6005:10;6000:3;5996:20;5993:1;5986:31;6036:4;6033:1;6026:15;6060:4;6057:1;6050:15;6076:127;6137:10;6132:3;6128:20;6125:1;6118:31;6168:4;6165:1;6158:15;6192:4;6189:1;6182:15;6208:128;6275:9;;;6296:11;;;6293:37;;;6310:18;;:::i;:::-;6208:128;;;;:::o;6341:127::-;6402:10;6397:3;6393:20;6390:1;6383:31;6433:4;6430:1;6423:15;6457:4;6454:1;6447:15;6473:135;6512:3;6533:17;;;6530:43;;6553:18;;:::i;:::-;-1:-1:-1;6600:1:6;6589:13;;6473:135::o;6613:289::-;6744:3;6782:6;6776:13;6798:66;6857:6;6852:3;6845:4;6837:6;6833:17;6798:66;:::i;:::-;6880:16;;;;;6613:289;-1:-1:-1;;6613:289:6:o",
  "source": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.17;\r\n\r\nimport \"./HashbuzzStates.sol\";\r\n/**\r\n * @dev This contract is used to store the state of the Hashbuzz contract\r\n * @title Utils\r\n * @author Om Prakash\r\n * @notice Deals with operations related to transactions.\r\n */\r\n\r\ncontract Utils is HashbuzzStates {\r\n    /**\r\n     * @dev Adds or removes a token from the whitelist.\r\n     * @param tokenAddress The address of the token.\r\n     * @param isWhitelisted Boolean flag to mark the token as whitelisted or not.\r\n     */\r\n    function associateToken(\r\n        address tokenAddress,\r\n        bool isWhitelisted\r\n    ) public onlyOwner {\r\n        require(tokenAddress != address(0), ERR_INVALID_TOKEN_ADDRESS);\r\n        if (isWhitelisted && !whitelistedToken[FUNGIBLE][tokenAddress]) {\r\n            // Add to whitelist if not already whitelisted\r\n            whitelistedToken[FUNGIBLE][tokenAddress] = true;\r\n            whitelistedTokenAddresses[FUNGIBLE].push(tokenAddress);\r\n        } else if (!isWhitelisted && whitelistedToken[FUNGIBLE][tokenAddress]) {\r\n            // Remove from whitelist if currently whitelisted\r\n            whitelistedToken[FUNGIBLE][tokenAddress] = false;\r\n\r\n            // Remove address from whitelistedAddresses array\r\n            uint256 length = whitelistedTokenAddresses[FUNGIBLE].length;\r\n            for (uint256 i = 0; i < length; i++) {\r\n                if (whitelistedTokenAddresses[FUNGIBLE][i] == tokenAddress) {\r\n                    whitelistedTokenAddresses[FUNGIBLE][\r\n                        i\r\n                    ] = whitelistedTokenAddresses[FUNGIBLE][length - 1];\r\n                    whitelistedTokenAddresses[FUNGIBLE].pop();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves all whitelisted addresses for a given token type.\r\n     * @return An array of addresses that are whitelisted for the given token type.\r\n     */\r\n    function getAllWhitelistedTokens() public view returns (address[] memory) {\r\n        return whitelistedTokenAddresses[FUNGIBLE];\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a specific token address is whitelisted for a given token type.\r\n     * @param tokenAddress The address of the token to check.\r\n     * @return Boolean flag indicating if the token is whitelisted.\r\n     */\r\n    function isTokenWhitelisted(\r\n        address tokenAddress\r\n    ) public view returns (bool) {\r\n        return whitelistedToken[FUNGIBLE][tokenAddress];\r\n    }\r\n\r\n    /**\r\n     * @dev Whitelist cmapigner to the user.\r\n     * @param newCampaigner Address of the user having campaigner role to be used here\r\n     */\r\n    function addCampaigner(address newCampaigner) public onlyOwner {\r\n        require(newCampaigner != address(0), ERR_INVALID_CAMPAIGN_ADDRESS);\r\n        require(!isCampaigner(newCampaigner), ERR_CAMPAIGN_ALREADY_EXISTS);\r\n        campaigners[newCampaigner] = true;\r\n        balances[newCampaigner] = 0;\r\n        emit CampaignerAdded(newCampaigner);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the balance of a fungible token for a specific campaigner.\r\n     * @param campaigner Address of the campaigner's solidity address.\r\n     * @param tokenId Solidity address used for the account.\r\n     * @return res The balance of the fungible token.\r\n     */\r\n    function getFungibleTokenBalance(\r\n        address campaigner,\r\n        address tokenId\r\n    ) public view returns (uint256 res) {\r\n        require(tokenId != address(0), ERR_INVALID_TOKEN_ADDRESS);\r\n        require(campaigner != address(0), ERR_INVALID_CAMPAIGN_ADDRESS);\r\n        require(isTokenWhitelisted(tokenId), ERR_TOKEN_NOT_WHITELISTED);\r\n        res = tokenBalances[campaigner][tokenId][FUNGIBLE];\r\n    }\r\n\r\n    /**\r\n     * @dev Balance holded by the user to see.\r\n     * @param campaigner Solidity address of the campaigner.\r\n     */\r\n    function getHbarBalance(\r\n        address campaigner\r\n    ) public view  returns (uint256 res) {\r\n        res = balances[campaigner];\r\n    }\r\n\r\n    /** Campaign Specific balance for the campaigners */\r\n    /**\r\n     * @dev Balance held by the user to see.\r\n     * @param campaignAddress Solidity address of the campaigner.\r\n     */\r\n    function getCampaignBalance(\r\n        string memory campaignAddress\r\n    ) public view returns (uint256) {\r\n        require(\r\n            bytes(campaignAddress).length > 0,\r\n            ERR_INVALID_CAMPAIGN_ADDRESS\r\n        );\r\n        return campaignBalances[campaignAddress];\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\rajatk\\hashbuzz-staging\\smv201\\contracts\\HashbuzzModules\\Utils.sol",
  "ast": {
    "absolutePath": "project:/contracts/HashbuzzModules/Utils.sol",
    "exportedSymbols": {
      "HashbuzzStates": [
        990
      ],
      "Utils": [
        1578
      ]
    },
    "id": 1579,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1303,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:24:3"
      },
      {
        "absolutePath": "project:/contracts/HashbuzzModules/HashbuzzStates.sol",
        "file": "./HashbuzzStates.sol",
        "id": 1304,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1579,
        "sourceUnit": 991,
        "src": "68:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1306,
              "name": "HashbuzzStates",
              "nameLocations": [
                "304:14:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 990,
              "src": "304:14:3"
            },
            "id": 1307,
            "nodeType": "InheritanceSpecifier",
            "src": "304:14:3"
          }
        ],
        "canonicalName": "Utils",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1305,
          "nodeType": "StructuredDocumentation",
          "src": "100:182:3",
          "text": " @dev This contract is used to store the state of the Hashbuzz contract\n @title Utils\n @author Om Prakash\n @notice Deals with operations related to transactions."
        },
        "fullyImplemented": true,
        "id": 1578,
        "linearizedBaseContracts": [
          1578,
          990
        ],
        "name": "Utils",
        "nameLocation": "295:5:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1419,
              "nodeType": "Block",
              "src": "646:1121:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1318,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1310,
                          "src": "665:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "689:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1319,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "681:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "681:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "665:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1324,
                        "name": "ERR_INVALID_TOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "693:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "657:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1326,
                  "nodeType": "ExpressionStatement",
                  "src": "657:62:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1327,
                      "name": "isWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "734:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 1333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "751:41:3",
                      "subExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1328,
                            "name": "whitelistedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "752:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(uint32 => mapping(address => bool))"
                            }
                          },
                          "id": 1330,
                          "indexExpression": {
                            "id": 1329,
                            "name": "FUNGIBLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "769:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "752:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1332,
                        "indexExpression": {
                          "id": 1331,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1310,
                          "src": "779:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "752:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "734:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1007:14:3",
                        "subExpression": {
                          "id": 1351,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1312,
                          "src": "1008:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1353,
                            "name": "whitelistedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "1025:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(uint32 => mapping(address => bool))"
                            }
                          },
                          "id": 1355,
                          "indexExpression": {
                            "id": 1354,
                            "name": "FUNGIBLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "1042:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1025:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1357,
                        "indexExpression": {
                          "id": 1356,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1310,
                          "src": "1052:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1025:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1007:58:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1417,
                    "nodeType": "IfStatement",
                    "src": "1003:757:3",
                    "trueBody": {
                      "id": 1416,
                      "nodeType": "Block",
                      "src": "1067:693:3",
                      "statements": [
                        {
                          "expression": {
                            "id": 1365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1359,
                                  "name": "whitelistedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 749,
                                  "src": "1145:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                                    "typeString": "mapping(uint32 => mapping(address => bool))"
                                  }
                                },
                                "id": 1362,
                                "indexExpression": {
                                  "id": 1360,
                                  "name": "FUNGIBLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 732,
                                  "src": "1162:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1145:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1363,
                              "indexExpression": {
                                "id": 1361,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1310,
                                "src": "1172:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "1145:40:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "66616c7365",
                              "id": 1364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1188:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "1145:48:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1366,
                          "nodeType": "ExpressionStatement",
                          "src": "1145:48:3"
                        },
                        {
                          "assignments": [
                            1368
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1368,
                              "mutability": "mutable",
                              "name": "length",
                              "nameLocation": "1281:6:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 1416,
                              "src": "1273:14:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1367,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1273:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1373,
                          "initialValue": {
                            "expression": {
                              "baseExpression": {
                                "id": 1369,
                                "name": "whitelistedTokenAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 754,
                                "src": "1290:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(uint32 => address[] storage ref)"
                                }
                              },
                              "id": 1371,
                              "indexExpression": {
                                "id": 1370,
                                "name": "FUNGIBLE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "1316:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1290:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1326:6:3",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1290:42:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1273:59:3"
                        },
                        {
                          "body": {
                            "id": 1414,
                            "nodeType": "Block",
                            "src": "1384:365:3",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1384,
                                        "name": "whitelistedTokenAddresses",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 754,
                                        "src": "1407:25:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                          "typeString": "mapping(uint32 => address[] storage ref)"
                                        }
                                      },
                                      "id": 1386,
                                      "indexExpression": {
                                        "id": 1385,
                                        "name": "FUNGIBLE",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 732,
                                        "src": "1433:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1407:35:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1388,
                                    "indexExpression": {
                                      "id": 1387,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1375,
                                      "src": "1443:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1407:38:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1389,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1310,
                                    "src": "1449:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1407:54:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1413,
                                "nodeType": "IfStatement",
                                "src": "1403:331:3",
                                "trueBody": {
                                  "id": 1412,
                                  "nodeType": "Block",
                                  "src": "1463:271:3",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 1403,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1391,
                                              "name": "whitelistedTokenAddresses",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 754,
                                              "src": "1486:25:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                                "typeString": "mapping(uint32 => address[] storage ref)"
                                              }
                                            },
                                            "id": 1394,
                                            "indexExpression": {
                                              "id": 1392,
                                              "name": "FUNGIBLE",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 732,
                                              "src": "1512:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "1486:35:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1395,
                                          "indexExpression": {
                                            "id": 1393,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1375,
                                            "src": "1548:1:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "1486:86:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1396,
                                              "name": "whitelistedTokenAddresses",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 754,
                                              "src": "1575:25:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                                "typeString": "mapping(uint32 => address[] storage ref)"
                                              }
                                            },
                                            "id": 1398,
                                            "indexExpression": {
                                              "id": 1397,
                                              "name": "FUNGIBLE",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 732,
                                              "src": "1601:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "1575:35:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1402,
                                          "indexExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1401,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1399,
                                              "name": "length",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1368,
                                              "src": "1611:6:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 1400,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1620:1:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "1611:10:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1575:47:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "1486:136:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1404,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1486:136:3"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1405,
                                              "name": "whitelistedTokenAddresses",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 754,
                                              "src": "1645:25:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                                "typeString": "mapping(uint32 => address[] storage ref)"
                                              }
                                            },
                                            "id": 1407,
                                            "indexExpression": {
                                              "id": 1406,
                                              "name": "FUNGIBLE",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 732,
                                              "src": "1671:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "1645:35:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1408,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1681:3:3",
                                          "memberName": "pop",
                                          "nodeType": "MemberAccess",
                                          "src": "1645:39:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                            "typeString": "function (address[] storage pointer)"
                                          }
                                        },
                                        "id": 1409,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1645:41:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1410,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1645:41:3"
                                    },
                                    {
                                      "id": 1411,
                                      "nodeType": "Break",
                                      "src": "1709:5:3"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1378,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "1367:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1379,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1368,
                              "src": "1371:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1367:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1415,
                          "initializationExpression": {
                            "assignments": [
                              1375
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1375,
                                "mutability": "mutable",
                                "name": "i",
                                "nameLocation": "1360:1:3",
                                "nodeType": "VariableDeclaration",
                                "scope": 1415,
                                "src": "1352:9:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1374,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1352:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1377,
                            "initialValue": {
                              "hexValue": "30",
                              "id": 1376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1364:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1352:13:3"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 1382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "1379:3:3",
                              "subExpression": {
                                "id": 1381,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1375,
                                "src": "1379:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1383,
                            "nodeType": "ExpressionStatement",
                            "src": "1379:3:3"
                          },
                          "nodeType": "ForStatement",
                          "src": "1347:402:3"
                        }
                      ]
                    }
                  },
                  "id": 1418,
                  "nodeType": "IfStatement",
                  "src": "730:1030:3",
                  "trueBody": {
                    "id": 1350,
                    "nodeType": "Block",
                    "src": "794:203:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1335,
                                "name": "whitelistedToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "869:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(uint32 => mapping(address => bool))"
                                }
                              },
                              "id": 1338,
                              "indexExpression": {
                                "id": 1336,
                                "name": "FUNGIBLE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "886:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "869:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1339,
                            "indexExpression": {
                              "id": 1337,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "896:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "869:40:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "912:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "869:47:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1342,
                        "nodeType": "ExpressionStatement",
                        "src": "869:47:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1347,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "972:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1343,
                                "name": "whitelistedTokenAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 754,
                                "src": "931:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(uint32 => address[] storage ref)"
                                }
                              },
                              "id": 1345,
                              "indexExpression": {
                                "id": 1344,
                                "name": "FUNGIBLE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "957:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "931:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "967:4:3",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "931:40:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "931:54:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1349,
                        "nodeType": "ExpressionStatement",
                        "src": "931:54:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1308,
              "nodeType": "StructuredDocumentation",
              "src": "326:206:3",
              "text": " @dev Adds or removes a token from the whitelist.\n @param tokenAddress The address of the token.\n @param isWhitelisted Boolean flag to mark the token as whitelisted or not."
            },
            "functionSelector": "1b0f32a3",
            "id": 1420,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1315,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1314,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "636:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 959,
                  "src": "636:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "636:9:3"
              }
            ],
            "name": "associateToken",
            "nameLocation": "547:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "580:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1420,
                  "src": "572:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "isWhitelisted",
                  "nameLocation": "608:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1420,
                  "src": "603:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1311,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:67:3"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:3"
            },
            "scope": 1578,
            "src": "538:1229:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1431,
              "nodeType": "Block",
              "src": "2025:61:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1427,
                      "name": "whitelistedTokenAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "2043:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(uint32 => address[] storage ref)"
                      }
                    },
                    "id": 1429,
                    "indexExpression": {
                      "id": 1428,
                      "name": "FUNGIBLE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "2069:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2043:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1426,
                  "id": 1430,
                  "nodeType": "Return",
                  "src": "2036:42:3"
                }
              ]
            },
            "documentation": {
              "id": 1421,
              "nodeType": "StructuredDocumentation",
              "src": "1775:170:3",
              "text": " @dev Retrieves all whitelisted addresses for a given token type.\n @return An array of addresses that are whitelisted for the given token type."
            },
            "functionSelector": "9991033c",
            "id": 1432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllWhitelistedTokens",
            "nameLocation": "1960:23:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1983:2:3"
            },
            "returnParameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "2007:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1423,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2007:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1424,
                    "nodeType": "ArrayTypeName",
                    "src": "2007:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2006:18:3"
            },
            "scope": 1578,
            "src": "1951:135:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1446,
              "nodeType": "Block",
              "src": "2424:66:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1440,
                        "name": "whitelistedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "2442:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(uint32 => mapping(address => bool))"
                        }
                      },
                      "id": 1442,
                      "indexExpression": {
                        "id": 1441,
                        "name": "FUNGIBLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 732,
                        "src": "2459:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2442:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1444,
                    "indexExpression": {
                      "id": 1443,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "2469:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2442:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1439,
                  "id": 1445,
                  "nodeType": "Return",
                  "src": "2435:47:3"
                }
              ]
            },
            "documentation": {
              "id": 1433,
              "nodeType": "StructuredDocumentation",
              "src": "2094:231:3",
              "text": " @dev Checks if a specific token address is whitelisted for a given token type.\n @param tokenAddress The address of the token to check.\n @return Boolean flag indicating if the token is whitelisted."
            },
            "functionSelector": "b5af090f",
            "id": 1447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenWhitelisted",
            "nameLocation": "2340:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2377:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1447,
                  "src": "2369:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2358:38:3"
            },
            "returnParameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1447,
                  "src": "2418:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2418:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2417:6:3"
            },
            "scope": 1578,
            "src": "2331:159:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1489,
              "nodeType": "Block",
              "src": "2713:290:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1456,
                          "name": "newCampaigner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1450,
                          "src": "2732:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2757:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2749:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1457,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2749:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2749:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2732:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1462,
                        "name": "ERR_INVALID_CAMPAIGN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "2761:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2724:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1464,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:66:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2809:28:3",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1467,
                              "name": "newCampaigner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1450,
                              "src": "2823:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1466,
                            "name": "isCampaigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "2810:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2810:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1470,
                        "name": "ERR_CAMPAIGN_ALREADY_EXISTS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "2839:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2801:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1472,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:66:3"
                },
                {
                  "expression": {
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1473,
                        "name": "campaigners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "2878:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1475,
                      "indexExpression": {
                        "id": 1474,
                        "name": "newCampaigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1450,
                        "src": "2890:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2878:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2907:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2878:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1478,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:33:3"
                },
                {
                  "expression": {
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1479,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "2922:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1481,
                      "indexExpression": {
                        "id": 1480,
                        "name": "newCampaigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1450,
                        "src": "2931:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2922:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2948:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2922:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1484,
                  "nodeType": "ExpressionStatement",
                  "src": "2922:27:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1486,
                        "name": "newCampaigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1450,
                        "src": "2981:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1485,
                      "name": "CampaignerAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 806,
                      "src": "2965:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1488,
                  "nodeType": "EmitStatement",
                  "src": "2960:35:3"
                }
              ]
            },
            "documentation": {
              "id": 1448,
              "nodeType": "StructuredDocumentation",
              "src": "2498:146:3",
              "text": " @dev Whitelist cmapigner to the user.\n @param newCampaigner Address of the user having campaigner role to be used here"
            },
            "functionSelector": "bff31996",
            "id": 1490,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1452,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2703:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 959,
                  "src": "2703:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2703:9:3"
              }
            ],
            "name": "addCampaigner",
            "nameLocation": "2659:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "newCampaigner",
                  "nameLocation": "2681:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1490,
                  "src": "2673:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2672:23:3"
            },
            "returnParameters": {
              "id": 1454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2713:0:3"
            },
            "scope": 1578,
            "src": "2650:353:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1537,
              "nodeType": "Block",
              "src": "3429:285:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1501,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1495,
                          "src": "3448:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3467:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3459:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1502,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3459:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3459:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3448:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1507,
                        "name": "ERR_INVALID_TOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "3471:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3440:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3440:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1509,
                  "nodeType": "ExpressionStatement",
                  "src": "3440:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1511,
                          "name": "campaigner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1493,
                          "src": "3516:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3538:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3530:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1512,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3530:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3530:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3516:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1517,
                        "name": "ERR_INVALID_CAMPAIGN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "3542:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3508:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3508:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1519,
                  "nodeType": "ExpressionStatement",
                  "src": "3508:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1522,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "3609:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1521,
                          "name": "isTokenWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "3590:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3590:27:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1524,
                        "name": "ERR_TOKEN_NOT_WHITELISTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "3619:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3582:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3582:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1526,
                  "nodeType": "ExpressionStatement",
                  "src": "3582:63:3"
                },
                {
                  "expression": {
                    "id": 1535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1527,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1498,
                      "src": "3656:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1528,
                            "name": "tokenBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "3662:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint32 => uint256)))"
                            }
                          },
                          "id": 1530,
                          "indexExpression": {
                            "id": 1529,
                            "name": "campaigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1493,
                            "src": "3676:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3662:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint32 => uint256))"
                          }
                        },
                        "id": 1532,
                        "indexExpression": {
                          "id": 1531,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1495,
                          "src": "3688:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3662:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_uint256_$",
                          "typeString": "mapping(uint32 => uint256)"
                        }
                      },
                      "id": 1534,
                      "indexExpression": {
                        "id": 1533,
                        "name": "FUNGIBLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 732,
                        "src": "3697:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3662:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3656:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1536,
                  "nodeType": "ExpressionStatement",
                  "src": "3656:50:3"
                }
              ]
            },
            "documentation": {
              "id": 1491,
              "nodeType": "StructuredDocumentation",
              "src": "3011:283:3",
              "text": " @dev Retrieves the balance of a fungible token for a specific campaigner.\n @param campaigner Address of the campaigner's solidity address.\n @param tokenId Solidity address used for the account.\n @return res The balance of the fungible token."
            },
            "functionSelector": "160f9c88",
            "id": 1538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFungibleTokenBalance",
            "nameLocation": "3309:23:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1493,
                  "mutability": "mutable",
                  "name": "campaigner",
                  "nameLocation": "3351:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1538,
                  "src": "3343:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3343:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1495,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3380:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1538,
                  "src": "3372:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3372:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3332:62:3"
            },
            "returnParameters": {
              "id": 1499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1498,
                  "mutability": "mutable",
                  "name": "res",
                  "nameLocation": "3424:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1538,
                  "src": "3416:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3416:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3415:13:3"
            },
            "scope": 1578,
            "src": "3300:414:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1552,
              "nodeType": "Block",
              "src": "3945:45:3",
              "statements": [
                {
                  "expression": {
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1546,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1544,
                      "src": "3956:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 1547,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "3962:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1549,
                      "indexExpression": {
                        "id": 1548,
                        "name": "campaigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "3971:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3962:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3956:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "3956:26:3"
                }
              ]
            },
            "documentation": {
              "id": 1539,
              "nodeType": "StructuredDocumentation",
              "src": "3722:122:3",
              "text": " @dev Balance holded by the user to see.\n @param campaigner Solidity address of the campaigner."
            },
            "functionSelector": "16d343e0",
            "id": 1553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHbarBalance",
            "nameLocation": "3859:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "campaigner",
                  "nameLocation": "3892:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "3884:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3884:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3873:36:3"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "res",
                  "nameLocation": "3940:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "3932:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3932:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3931:13:3"
            },
            "scope": 1578,
            "src": "3850:140:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1576,
              "nodeType": "Block",
              "src": "4292:179:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1564,
                                "name": "campaignAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1556,
                                "src": "4331:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4325:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 1562,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4325:5:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4325:22:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4348:6:3",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4325:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4357:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4325:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1569,
                        "name": "ERR_INVALID_CAMPAIGN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "4373:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4303:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4303:109:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "4303:109:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1572,
                      "name": "campaignBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "4430:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 1574,
                    "indexExpression": {
                      "id": 1573,
                      "name": "campaignAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1556,
                      "src": "4447:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4430:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1560,
                  "id": 1575,
                  "nodeType": "Return",
                  "src": "4423:40:3"
                }
              ]
            },
            "documentation": {
              "id": 1554,
              "nodeType": "StructuredDocumentation",
              "src": "4056:125:3",
              "text": " @dev Balance held by the user to see.\n @param campaignAddress Solidity address of the campaigner."
            },
            "functionSelector": "4a3b1152",
            "id": 1577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCampaignBalance",
            "nameLocation": "4196:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "campaignAddress",
                  "nameLocation": "4239:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "4225:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4225:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4214:47:3"
            },
            "returnParameters": {
              "id": 1560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "4283:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4283:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4282:9:3"
            },
            "scope": 1578,
            "src": "4187:284:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1579,
        "src": "286:4188:3",
        "usedErrors": []
      }
    ],
    "src": "40:4436:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-11-15T16:56:42.506Z",
  "devdoc": {
    "author": "Om Prakash",
    "details": "This contract is used to store the state of the Hashbuzz contract",
    "kind": "dev",
    "methods": {
      "addCampaigner(address)": {
        "details": "Whitelist cmapigner to the user.",
        "params": {
          "newCampaigner": "Address of the user having campaigner role to be used here"
        }
      },
      "associateToken(address,bool)": {
        "details": "Adds or removes a token from the whitelist.",
        "params": {
          "isWhitelisted": "Boolean flag to mark the token as whitelisted or not.",
          "tokenAddress": "The address of the token."
        }
      },
      "getAllWhitelistedTokens()": {
        "details": "Retrieves all whitelisted addresses for a given token type.",
        "returns": {
          "_0": "An array of addresses that are whitelisted for the given token type."
        }
      },
      "getCampaignBalance(string)": {
        "details": "Balance held by the user to see.",
        "params": {
          "campaignAddress": "Solidity address of the campaigner."
        }
      },
      "getFungibleTokenBalance(address,address)": {
        "details": "Retrieves the balance of a fungible token for a specific campaigner.",
        "params": {
          "campaigner": "Address of the campaigner's solidity address.",
          "tokenId": "Solidity address used for the account."
        },
        "returns": {
          "res": "The balance of the fungible token."
        }
      },
      "getHbarBalance(address)": {
        "details": "Balance holded by the user to see.",
        "params": {
          "campaigner": "Solidity address of the campaigner."
        }
      },
      "isTokenWhitelisted(address)": {
        "details": "Checks if a specific token address is whitelisted for a given token type.",
        "params": {
          "tokenAddress": "The address of the token to check."
        },
        "returns": {
          "_0": "Boolean flag indicating if the token is whitelisted."
        }
      }
    },
    "title": "Utils",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Deals with operations related to transactions.",
    "version": 1
  }
}
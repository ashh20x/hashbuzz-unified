# =============================================================================
# HashBuzz Frontend Environment Configuration
# =============================================================================
# Copy this file to .env and update the values for your environment
# This file contains all environment variables used by the application and Docker setup

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Environment
NODE_ENV=development                          # Application environment (development/production)

# Network Configuration
VITE_NETWORK=testnet                         # Hedera network (testnet/mainnet/previewnet)

# Backend API Configuration
VITE_BASE_URL=http://localhost:5000         # Backend API base URL

# Session & Token Configuration
# Token refresh timing (in milliseconds)
# Should be LESS than backend ACCESS_TOKEN_EXPIRES_IN to refresh before expiry
# Example: If backend token expires in 2m (120000ms), set this to 90000ms (1.5m)
VITE_TOKEN_REFRESH_INTERVAL=90000           # Auto-refresh token every 90 seconds (1.5 minutes)
VITE_TOKEN_EXPIRY_BUFFER=30000              # Buffer time before token expiry to trigger refresh (30s)

# Development Features
VITE_ENABLE_DEV_TOOLS=true                  # Enable Redux DevTools and development features
VITE_ENABLE_DEBUG_LOGS=true                 # Enable console debug logs
VITE_ENABLE_HOT_RELOAD=true                 # Enable Vite Hot Module Replacement
VITE_ENABLE_CAMPAIGN_V201=true              # Enable V201 Campaign features (feature flag)

# =============================================================================
# AWS SECRETS MANAGER CONFIGURATION
# =============================================================================

# Secrets Management
FETCH_SECRETS=true                          # Fetch secrets from AWS Secrets Manager (recommended)
AWS_REGION=us-east-1                        # AWS region for Secrets Manager
SECRET_NAME=hashbuzz/frontend/secrets       # Name of the secret in AWS Secrets Manager

# AWS Credentials (Required if FETCH_SECRETS=true)
AWS_ACCESS_KEY_ID=your-aws-access-key-id    # AWS Access Key ID
AWS_SECRET_ACCESS_KEY=your-aws-secret-key   # AWS Secret Access Key
AWS_SESSION_TOKEN=                          # AWS Session Token (optional, for temporary credentials)
AWS_PROFILE=                                # AWS Profile (optional, alternative to access key/secret)

# =============================================================================
# FIREBASE CONFIGURATION (Stored in AWS Secrets Manager)
# =============================================================================
# These values are automatically fetched from AWS Secrets Manager when FETCH_SECRETS=true
# For local development without AWS, uncomment and set these values:

VITE_FIREBASE_API_KEY=your-firebase-api-key
VITE_FIREBASE_AUTH_DOMAIN=your-project.firebaseapp.com
VITE_FIREBASE_PROJECT_ID=your-project-id
VITE_FIREBASE_STORAGE_BUCKET=your-project.appspot.com
VITE_FIREBASE_MESSAGING_SENDER_ID=123456789
VITE_FIREBASE_APP_ID=1:123456789:web:abcdef123456
VITE_FIREBASE_MEASUREMENT_ID=G-XXXXXXXXXX

# =============================================================================
# WALLETCONNECT CONFIGURATION (Stored in AWS Secrets Manager)
# =============================================================================
# These values are automatically fetched from AWS Secrets Manager when FETCH_SECRETS=true
# For local development without AWS, uncomment and set these values:

VITE_PROJECT_ID=your-walletconnect-project-id

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Build Configuration
DOCKER_BUILDKIT=1                           # Enable Docker BuildKit
COMPOSE_DOCKER_CLI_BUILD=1                  # Use Docker CLI for compose builds

# Development Server Configuration (for Docker)
VITE_HOST=0.0.0.0                          # Host for Vite dev server in Docker
VITE_PORT=3000                             # Port for Vite dev server

# =============================================================================
# PRODUCTION CONFIGURATION
# =============================================================================

# Production Features (set these for production builds)
# VITE_ENABLE_ANALYTICS=true                # Enable analytics in production
# VITE_ENABLE_DEV_TOOLS=false              # Disable dev tools in production
# VITE_ENABLE_DEBUG_LOGS=false             # Disable debug logs in production

# =============================================================================
# IMPORTANT NOTES
# =============================================================================

# üîê SECURITY:
#   - Never commit the actual .env file to version control
#   - Keep sensitive values (API keys, private keys) in AWS Secrets Manager
#   - Use different configurations for different environments (dev/staging/prod)

# üê≥ DOCKER:
#   - Environment variables are automatically set up by scripts/setup-docker-env.sh
#   - AWS credentials are required if FETCH_SECRETS=true
#   - The application will fetch Firebase and WalletConnect secrets from AWS

# üöÄ DEPLOYMENT:
#   - For production, set FETCH_SECRETS=true and configure AWS credentials
#   - Ensure secrets are uploaded to AWS Secrets Manager using scripts/setup-aws-secrets.sh
#   - Set NODE_ENV=production for production builds

# üõ†Ô∏è DEVELOPMENT:
#   - Run scripts/setup-env.sh for guided environment setup
#   - Use docker compose -f compose-dev.yaml up frontend-dev to start development
#   - Restart the development server after changing environment variables

# üìù VARIABLE NAMING:
#   - All frontend variables must be prefixed with VITE_ to be available in the browser
#   - Boolean values should be 'true' or 'false' as strings
#   - Use absolute URLs for external services
